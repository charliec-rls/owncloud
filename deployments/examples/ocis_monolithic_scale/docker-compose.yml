---
version: "3.7"

services:
  traefik:
    image: traefik:v2.9.1
    networks:
      ocis-net:
        aliases:
          - ${OCIS_DOMAIN:-ocis.owncloud.test}
    command:
      - "--log.level=${TRAEFIK_LOG_LEVEL:-ERROR}"
      # letsencrypt configuration
      - "--certificatesResolvers.http.acme.email=${TRAEFIK_ACME_MAIL:-example@example.org}"
      - "--certificatesResolvers.http.acme.storage=/certs/acme.json"
      - "--certificatesResolvers.http.acme.httpChallenge.entryPoint=http"
      # enable dashboard
      - "--api.dashboard=true"
      # define entrypoints
      - "--entryPoints.http.address=:80"
      - "--entryPoints.http.http.redirections.entryPoint.to=https"
      - "--entryPoints.http.http.redirections.entryPoint.scheme=https"
      - "--entryPoints.https.address=:443"
      # docker provider (get configuration from container labels)
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedByDefault=false"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "certs:/certs"
    labels:
      - "traefik.enable=${TRAEFIK_DASHBOARD:-false}"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_BASIC_AUTH_USERS:-admin:$$apr1$$4vqie50r$$YQAmQdtmz5n9rEALhxJ4l.}" # defaults to admin:admin
      - "traefik.http.routers.traefik.entrypoints=https"
      - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_DOMAIN:-traefik.owncloud.test}`)"
      - "traefik.http.routers.traefik.middlewares=traefik-auth"
      - "traefik.http.routers.traefik.tls.certresolver=http"
      - "traefik.http.routers.traefik.service=api@internal"
    logging:
      driver: "local"
    restart: always

  ocis-init:
    image: owncloud/ocis:${OCIS_DOCKER_TAG:-latest}
    entrypoint:
      - /bin/sh
    # run ocis init to initialize a configuration file with random secrets
    # it will fail on subsequent runs, because the config file already exists
    # therefore we ignore the error
    command: ["-c", "ocis init || true"]
    environment:
      # INSECURE: needed if oCIS / Traefik is using self generated certificates
      OCIS_INSECURE: "${INSECURE:-false}"
    volumes:
      - ocis-config:/etc/ocis
    restart: "no"

  scalable:
    image: owncloud/ocis:${OCIS_DOCKER_TAG:-latest}
    deploy:
      replicas: 2 # can be scaled
    networks:
      ocis-net:
    environment:
      OCIS_EXCLUDE_RUN_SERVICES: "store,search,nats,idm"

      # INSECURE: needed if oCIS / Traefik is using self generated certificates
      OCIS_INSECURE: "${INSECURE:-false}"
      OCIS_URL: https://${OCIS_DOMAIN:-ocis.owncloud.test}
      OCIS_LOG_LEVEL: ${OCIS_LOG_LEVEL:-error} # make oCIS less verbose
      OCIS_LOG_COLOR: "${OCIS_LOG_COLOR:-false}"
      PROXY_TLS: "false" # do not use SSL between Traefik and oCIS

      # basic auth (not recommended, but needed for eg. WebDav clients that do not support OpenID Connect)
      PROXY_ENABLE_BASIC_AUTH: "${PROXY_ENABLE_BASIC_AUTH:-false}"


      # TODO: cache

      # TODO: registry

      # configure non-scalable services
      AUDIT_EVENTS_ENDPOINT: nonscalable:9233
      GRAPH_EVENTS_ENDPOINT: nonscalable:9233
      NOTIFICATIONS_EVENTS_ENDPOINT: nonscalable:9233
      SEARCH_EVENTS_ENDPOINT: nonscalable:9233
      SHARING_EVENTS_ENDPOINT: nonscalable:9233
      STORAGE_USERS_EVENTS_ENDPOINT: nonscalable:9233
      LDAP_URI: ldaps://nonscalable:9235

      # TODO: x509: certificate is valid for localhost, not
      LDAP_INSECURE: true

    volumes:
      - ocis-config:/etc/ocis
      - ocis-data:/var/lib/ocis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.scalable.entrypoints=https"
      - "traefik.http.routers.scalable.rule=Host(`${OCIS_DOMAIN:-ocis.owncloud.test}`)"
      - "traefik.http.routers.scalable.tls.certresolver=http"
      - "traefik.http.routers.scalable.service=scalable"
      - "traefik.http.services.scalable.loadbalancer.server.port=9200"
    logging:
      driver: "local"
    restart: always

  nonscalable:
    image: owncloud/ocis:${OCIS_DOCKER_TAG:-latest}
    deploy:
      replicas: 1 # cannot be scaled!
    networks:
      ocis-net:
    environment:
      OCIS_RUN_SERVICES: "store,search,nats,idm"

      OCIS_URL: https://${OCIS_DOMAIN:-ocis.owncloud.test}
      OCIS_LOG_LEVEL: ${OCIS_LOG_LEVEL:-error} # make oCIS less verbose
      OCIS_LOG_COLOR: "${OCIS_LOG_COLOR:-false}"
      OCIS_INSECURE: "${INSECURE:-false}"
      # admin user password
      IDM_ADMIN_PASSWORD: "${ADMIN_PASSWORD:-admin}" # this overrides the admin password from the configuration file
      # demo users
      IDM_CREATE_DEMO_USERS: "${DEMO_USERS:-false}"

      # expose ports
      NATS_NATS_HOST: "0.0.0.0"
      NATS_NATS_PORT: "9233"
      SEARCH_GRPC_ADDR: 0.0.0.0:9220
      IDM_LDAPS_ADDR: 0.0.0.0:9235
      STORE_GRPC_ADDR: 0.0.0.0:9460

    volumes:
      - ocis-config:/etc/ocis
      - ocis-data:/var/lib/ocis
    logging:
      driver: "local"
    restart: always

volumes:
  certs:
  ocis-config:
  ocis-data:

networks:
  ocis-net:
