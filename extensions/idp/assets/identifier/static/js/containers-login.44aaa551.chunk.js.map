{"version":3,"sources":["errors/index.js","actions/common.js","components/TextInput.js","actions/login.js","containers/Login/Login.js","containers/Login/Chooseaccount.js","components/ClientDisplayName.js","components/ScopesList.js","containers/Login/Consent.js","containers/Login/Loginscreen.js","models/hello.js","utils.js","actions/utils.js","components/Loading.js","components/ResponsiveScreen.js"],"names":["ERROR_LOGIN_VALIDATE_MISSINGUSERNAME","ERROR_LOGIN_VALIDATE_MISSINGPASSWORD","ERROR_LOGIN_FAILED","ERROR_HTTP_NETWORK_ERROR","ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS","ERROR_HTTP_UNEXPECTED_RESPONSE_STATE","translations","defineMessages","id","defaultMessage","ExtendedError","message","values","undefined","Error","captureStackTrace","ErrorMessage","injectIntl","props","error","intl","messageDescriptor","Object","assign","formatMessage","receiveError","type","types","resetHello","receiveHello","hello","success","username","displayName","state","executeHello","dispatch","getState","common","flow","query","r","withClientRequestState","newHelloRequest","axios","post","headers","then","response","status","data","Promise","resolve","catch","handleAxiosError","retryHello","executeLogoff","TextInput","useIntl","label","extraClassName","className","htmlFor","placeholder","ModeLogonUsernamePassword","receiveValidateLogon","errors","requestLogon","password","receiveLogon","logon","requestConsent","allow","receiveConsent","executeConsent","scope","client_id","redirect_uri","ref","flow_nonce","nonce","http","executeLogonIfFormValid","isSignedIn","reject","keys","length","validateUsernamePassword","mode","params","push","executeLogon","advanceLogonFlow","history","done","extraQuery","q","details","next","replace","location","search","hash","continue_uri","prompt","window","queryString","stringify","continue","indexOf","document","origin","target","action","Login","this","loading","classes","passwordResetLink","loginFailed","hasError","errorMessage","extraPropsUsername","extraPropsPassword","onSubmit","event","autoFocus","autoCapitalize","spellCheck","value","onChange","handleChange","autoComplete","margin","Typography","variant","component","color","wrapper","Link","href","Button","disabled","onClick","CircularProgress","size","buttonProgress","name","updateInput","preventDefault","React","PureComponent","connect","login","withStyles","theme","green","position","top","left","marginTop","marginLeft","subHeader","marginBottom","spacing","width","textAlign","accountList","marginRight","accountListItem","paddingLeft","paddingRight","useEffect","List","disablePadding","ListItem","button","disableGutters","ListItemAvatar","Avatar","substr","ListItemText","primary","logoff","ClientDisplayName","client","rest","display_name","scopeIDTranslations","row","paddingTop","paddingBottom","scopes","meta","mapping","definitions","rows","known","definition","translation","description","dense","key","Checkbox","checked","disableRipple","Consent","filter","join","konnect","gutterBottom","clientDisplayName","Tooltip","placement","title","redirectURI","scopesList","DialogActions","REQUEST_CONSENT_ALLOW","renderIf","display","Loginscreen","ResponsiveScreen","withoutPadding","path","exact","Chooseaccount","RedirectWithQuery","selectedFlow","id_token_hint","max_age","claims_scope","obj","Uint8Array","crypto","getRandomValues","Array","prototype","map","call","x","toString","request","Grid","item","align","LinearProgress","retry","withoutLogo","children","other","DialogProps","PaperProps","logo","src","process","alt","content","DialogContent","container","justify","alignItems","direction","classNames","root","chunks","footerProductName","defaultProps","flex","actions","justifyContent","maxWidth"],"mappings":"8bAEaA,EAAuC,+CACvCC,EAAuC,+CACvCC,EAAqB,6BACrBC,EAA2B,kCAC3BC,EAAwC,8CACxCC,EAAuC,6CAG9CC,EAAeC,aAAc,mBAChCP,EAAuC,CACtCQ,GAAIR,EACJS,eAAgB,kCAHe,cAKhCR,EAAuC,CACtCO,GAAIP,EACJQ,eAAgB,kCAPe,cAShCP,EAAqB,CACpBM,GAAIN,EACJO,eAAgB,gEAXe,cAahCN,EAA2B,CAC1BK,GAAIL,EACJM,eAAgB,+DAfe,cAiBhCL,EAAwC,CACvCI,GAAIJ,EACJK,eAAgB,oFAnBe,cAqBhCJ,EAAuC,CACtCG,GAAIH,EACJI,eAAgB,uCAvBe,IA4BtBC,EAAb,kDAGE,WAAYC,EAASC,GAAS,IAAD,8BAC3B,cAAMD,IAHRC,YAASC,OAIyBA,IAA5BC,MAAMC,mBACRD,MAAMC,kBAAN,eAA8BL,GAEhC,EAAKE,OAASA,EALa,EAH/B,sBAAmCE,QA6B5B,IAAME,EAAeC,aAhB5B,SAA+BC,GAC7B,IAAQC,EAAgBD,EAAhBC,MAAOC,EAASF,EAATE,KAEf,IAAKD,EACH,OAAO,KAGT,IAAMX,EAAKW,EAAMX,GAAKW,EAAMX,GAAKW,EAAMR,QACjCU,EAAoBC,OAAOC,OAAO,GAAI,CAC1Cf,KACAC,eAAgBU,EAAMX,GAAKW,EAAMR,aAAUE,GAC1CP,EAAaE,IAEhB,OAAOY,EAAKI,cAAcH,EAAmBF,EAAMP,Y,gCChErD,qMAaO,SAASa,EAAaN,GAC3B,MAAO,CACLO,KAAMC,IACNR,SAIG,SAASS,IACd,MAAO,CACLF,KAAMC,KAIH,SAASE,EAAaC,GAC3B,IAAQC,EAAmCD,EAAnCC,QAASC,EAA0BF,EAA1BE,SAAUC,EAAgBH,EAAhBG,YAE3B,MAAO,CACLP,KAAMC,IACNO,OAAmB,IAAZH,EACPC,WACAC,cACAH,SAIG,SAASK,IACd,OAAO,SAASC,EAAUC,GACxBD,EAASR,KAET,MAAwBS,IAAWC,OAA3BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAERC,EAAIC,YAAuBC,YAAgBJ,EAAMC,IACvD,OAAOI,IAAMC,KAAK,uBAAwBJ,EAAG,CAC3CK,QAAS,CACP,sBAAuB,OAExBC,MAAK,SAAAC,GACN,OAAQA,EAASC,QACf,KAAK,IAEH,OAAOD,EAASE,KAClB,KAAK,IAEH,MAAO,CACLnB,SAAS,EACTG,MAAOc,EAASF,QAAQ,yBAE5B,QAEE,MAAM,IAAIpC,IAAcN,IAAuC4C,OAElED,MAAK,SAAAC,GACN,GAAIA,EAASd,QAAUO,EAAEP,MACvB,MAAM,IAAIxB,IAAcL,IAAsC2C,GAIhE,OADAZ,EAASP,EAAamB,IACfG,QAAQC,QAAQJ,MACtBK,OAAM,SAAAlC,GACPA,EAAQmC,YAAiBnC,GAEzBiB,EAASX,EAAaN,QAKrB,SAASoC,IACd,OAAO,SAASnB,GAGd,OAFAA,EAASX,EAAa,OAEfW,EAASD,MAiBb,SAASqB,IACd,OAAO,SAASpB,GACdA,EAASR,KACTQ,EAfK,CACLV,KAAMC,MAgBN,IAAMc,EAAIC,YAAuB,IACjC,OAAOE,IAAMC,KAAK,wBAAyBJ,EAAG,CAC5CK,QAAS,CACP,sBAAuB,OAExBC,MAAK,SAAAC,GACN,OAAQA,EAASC,QACf,KAAK,IAEH,OAAOD,EAASE,KAClB,QAEE,MAAM,IAAIxC,IAAcN,IAAuC4C,OAElED,MAAK,SAAAC,GACN,GAAIA,EAASd,QAAUO,EAAEP,MACvB,MAAM,IAAIxB,IAAcL,IAAsC2C,GA5B/D,IAAuBd,EAgCxB,OADAE,GA/BwBF,GA+BoB,IAArBc,EAASjB,QA9B7B,CACLL,KAAMC,IACNO,WA6BSiB,QAAQC,QAAQJ,MACtBK,OAAM,SAAAlC,GACPA,EAAQmC,YAAiBnC,GAEzBiB,EAASX,EAAaN,U,yPCpGbsC,EAxBG,SAACvC,GACf,IAAME,EAAOsC,cACPC,EAAQzC,EAAMyC,MACdC,EAAiB1C,EAAM0C,eAK7B,cAHO1C,EAAMyC,aACNzC,EAAM0C,eAGT,6BACI,2BAAOC,UAAU,WACVC,QAAS5C,EAAMV,IAAKY,EAAKI,cAAcmC,IAC9C,yCAAOE,UAAS,mBAAcD,GAAkC,KAAU1C,EAA1E,CACO6C,YAAa7C,EAAM6C,YAAc3C,EAAKI,cAAcN,EAAM6C,aAAe,U,0ECE/EC,EAA4B,IAUlC,SAASC,EAAqBC,GACnC,MAAO,CACLxC,KAAMC,IACNuC,UAIG,SAASC,EAAanC,EAAUoC,GACrC,MAAO,CACL1C,KAAMC,IACNK,WACAoC,YAIG,SAASC,EAAaC,GAC3B,IAAQvC,EAAoBuC,EAApBvC,QAASmC,EAAWI,EAAXJ,OAEjB,MAAO,CACLxC,KAAMC,IACNI,UACAmC,UAIG,SAASK,IAA6B,IAAdC,EAAa,wDAC1C,MAAO,CACL9C,KAAM8C,EAAQ7C,IAA8BA,KAIzC,SAAS8C,EAAeH,GAC7B,IAAQvC,EAAoBuC,EAApBvC,QAASmC,EAAWI,EAAXJ,OAEjB,MAAO,CACLxC,KAAMC,IACNI,UACAmC,UAmFG,SAASQ,IAAuC,IAAxBF,EAAuB,wDAAVG,EAAU,uDAAJ,GAChD,OAAO,SAASvC,EAAUC,GACxBD,EAASmC,EAAeC,IAExB,IAAQhC,EAAUH,IAAWC,OAArBE,MAEFC,EAAIC,YAAuB,CAC/B8B,QACAG,QACAC,UAAWpC,EAAMoC,WAAa,GAC9BC,aAAcrC,EAAMqC,cAAgB,GACpCC,IAAKtC,EAAMN,OAAS,GACpB6C,WAAYvC,EAAMwC,OAAS,KAE7B,OAAOpC,IAAMC,KAAK,yBAA0BJ,EAAG,CAC7CK,QAAS,CACP,sBAAuB,OAExBC,MAAK,SAAAC,GACN,OAAQA,EAASC,QACf,KAAK,IAEH,OAAOD,EAASE,KAClB,KAAK,IAEH,MAAO,CACLnB,SAAS,EACTG,MAAOc,EAASF,QAAQ,yBAE5B,QAEE,MAAM,IAAIpC,IAAcN,IAAuC4C,OAElED,MAAK,SAAAC,GACN,GAAIA,EAASd,QAAUO,EAAEP,MACvB,MAAM,IAAIxB,IAAcL,IAAsC2C,GAIhE,OADAZ,EAASqC,EAAezB,IACjBG,QAAQC,QAAQJ,MACtBK,OAAM,SAAAlC,GAEP,IAAM+C,EAAS,CACbe,KAFF9D,EAAQmC,YAAiBnC,IAMzB,OADAiB,EAAS6B,EAAqBC,IACvB,CACLnC,SAAS,EACTmC,OAAQA,OA4BT,SAASgB,EAAwBlD,EAAUoC,EAAUe,GAC1D,OAAO,SAAC/C,GACN,OAAOA,EAxBJ,SAAkCJ,EAAUoC,EAAUe,GAC3D,OAAO,SAAS/C,GACd,OAAO,IAAIe,SAAQ,SAACC,EAASgC,GAC3B,IAAMlB,EAAS,GAEVlC,IACHkC,EAAOlC,SAAW,IAAIlB,MAAMd,MAEzBoE,GAAae,IAChBjB,EAAOE,SAAW,IAAItD,MAAMb,MAG9BmC,EAAS6B,EAAqBC,IACK,IAA/B5C,OAAO+D,KAAKnB,GAAQoB,OACtBlC,EAAQc,GAERkB,EAAOlB,OASTqB,CAAyBvD,EAAUoC,EAAUe,IAC7CpC,MAAK,WAEL,OAAOX,EAlKN,SAAsBJ,EAAUoC,GAA2C,IAAjCoB,EAAgC,uDAA3BxB,EACpD,OAAO,SAAS5B,EAAUC,GACxBD,EAAS+B,EAAanC,EAAUoC,IAChChC,EAASP,YAAa,CACpBG,cAGF,MAAwBK,IAAWC,OAA3BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAGRiD,EAAS,GACf,OAAQD,GACN,KAAKxB,EAEHyB,EAAOC,KAAK1D,EAAUoC,EAAUoB,GAChC,MAEF,IArE8C,IAuE5CC,EAAOC,KAAK1D,EAAU,GAAIwD,GAI9B,IAAM/C,EAAIC,YAAuB,CAC/B+C,OAAQA,EACR3D,MAAOa,YAAgBJ,EAAMC,KAE/B,OAAOI,IAAMC,KAAK,uBAAwBJ,EAAG,CAC3CK,QAAS,CACP,sBAAuB,OAExBC,MAAK,SAAAC,GACN,OAAQA,EAASC,QACf,KAAK,IAEH,OAAOD,EAASE,KAClB,KAAK,IAEH,MAAO,CACLnB,SAAS,EACTG,MAAOc,EAASF,QAAQ,wBACxBoB,OAAQ,CACNe,KAAM,IAAInE,MAAMZ,OAGtB,QAEE,MAAM,IAAIQ,IAAcN,IAAuC4C,OAElED,MAAK,SAAAC,GACN,GAAIA,EAASd,QAAUO,EAAEP,MACvB,MAAM,IAAIxB,IAAcL,IAAsC2C,GAGhE,IAAMlB,EAAUkB,EAAVlB,MASN,OARKA,IACHA,EAAQ,CACNC,QAASiB,EAASjB,QAClBC,aAGJI,EAASP,YAAaC,IACtBM,EAASiC,EAAarB,IACfG,QAAQC,QAAQJ,MACtBK,OAAM,SAAAlC,GAEP,IAAM+C,EAAS,CACbe,KAFF9D,EAAQmC,YAAiBnC,IAMzB,OADAiB,EAAS6B,EAAqBC,IACvB,CACLnC,SAAS,EACTmC,OAAQA,OAyFMyB,CAAa3D,EAAUoC,EAD1Be,EArNiC,IAqNmBnB,OAEhEX,OAAM,SAACa,GACR,MAAO,CACLnC,SAAS,EACTmC,OAAQA,OAMT,SAAS0B,EAAiB7D,EAAS8D,GAAqC,IAA5BC,EAA2B,wDAAfC,EAAe,uDAAJ,GACxE,OAAO,SAAC3D,EAAUC,GAChB,GAAKN,EAAL,CAIA,MAA+BM,IAAWC,OAAlCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOV,EAArB,EAAqBA,MACfkE,EAAI1E,OAAOC,OAAO,GAAIiB,EAAOuD,GAEnC,OAAQxD,GACN,IAAK,QACL,IAAK,UACL,IAAK,OACH,GAAIT,EAAMmE,QAAQ1D,OAASA,EAEzB,MAGF,IAAKuD,GAA+B,YAAvBhE,EAAMmE,QAAQC,KAEzB,YADAL,EAAQM,QAAR,kBAA2BN,EAAQO,SAASC,QAA5C,OAAqDR,EAAQO,SAASE,OAGxE,GAAIxE,EAAMmE,QAAQM,aAGhB,OAFAP,EAAEQ,OAAS,YACXC,OAAOL,SAASD,QAAQrE,EAAMmE,QAAQM,aAAe,IAAMG,IAAYC,UAAUX,IAInF,MAEF,QAEE,GAAIA,EAAEY,UAA6D,IAAjDZ,EAAEY,SAASC,QAAQC,SAASV,SAASW,QAErD,YADAN,OAAOL,SAASD,QAAQH,EAAEY,UAMhC,IAAII,EAAS,WACU,YAAnBnB,EAAQoB,SACVD,EAASA,EAASnB,EAAQO,SAASC,OAASR,EAAQO,SAASE,MAG/DlE,EAAS6B,EAAqB,KAC9B4B,EAAQH,KAAKsB,KC9QjB,IAuBME,E,4MACJhF,MAAQ,G,uDAER,WACE,MAA4CiF,KAAKjG,MAAzCY,EAAR,EAAQA,MAAOU,EAAf,EAAeA,MAAOJ,EAAtB,EAAsBA,SAAUyD,EAAhC,EAAgCA,QAChC,GAAI/D,GAASA,EAAMI,OAA4B,SAAnB2D,EAAQoB,OAClC,OAAKzE,EAAMgE,SAAqD,GAA3ChE,EAAMgE,OAAOK,QAAQ,uBAK1ChB,EAAQM,QAAR,wBAAiCN,EAAQO,SAASC,QAAlD,OAA2DR,EAAQO,SAASE,YAJ1ElE,EAASwD,GAAiB,EAAMC,M,oBAStC,WAAU,IAAD,OACP,EAAkEsB,KAAKjG,MAA/DkG,EAAR,EAAQA,QAASlD,EAAjB,EAAiBA,OAAQmD,EAAzB,EAAyBA,QAASrF,EAAlC,EAAkCA,SAAUsF,EAA5C,EAA4CA,kBACtCC,EAAcrD,EAAOe,KACrBuC,EAAWtD,EAAOe,MAAQf,EAAOlC,UAAYkC,EAAOE,SACpDqD,EAAevD,EAAOe,KACxB,kBAAC,IAAD,CAAc9D,MAAO+C,EAAOe,OAC3Bf,EAAOlC,SACN,kBAAC,IAAD,CAAcb,MAAO+C,EAAOlC,WAC5B,kBAAC,IAAD,CAAcb,MAAO+C,EAAOE,WAC5BsD,EAAqB,CACzB,eAAkBxD,EAAOlC,UAAYkC,EAAOe,KAAQ,OAAS,SAEzD0C,EAAqB,CACzB,eAAkBzD,EAAOE,UAAYF,EAAOe,KAAQ,OAAS,SAa7D,OAVCf,EAAOlC,UAAYkC,EAAOe,QAC3ByC,EAAkB,eAAqB,QACvCA,EAAmB,oBAAsB,2BAGxCxD,EAAOE,UAAYF,EAAOe,QAC3B0C,EAAkB,eAAqB,QACvCA,EAAmB,oBAAsB,0BAIrC,6BAEE,wBAAI9D,UAAU,mBAAd,WACA,0BAAMoD,OAAO,GAAGpD,UAAU,gBAAgB+D,SAAU,SAACC,GAAD,OAAW,EAAKvD,MAAMuD,KACxE,kBAAC,EAAD,eACIC,WAAS,EACTC,eAAe,MACfC,WAAW,QACXC,MAAOjG,EACPkG,SAAUf,KAAKgB,aAAa,YAC5BC,aAAa,0BACbrE,YAAc,CAACvD,GAAI,oCAAqCC,eAAgB,YACxEkD,MAAQ,CAACnD,GAAI,oCAAqCC,eAAgB,YAClED,GAAG,qBACCkH,IAER,kBAAC,EAAD,eACIhG,KAAK,WACL2G,OAAO,SACPH,SAAUf,KAAKgB,aAAa,YAC5BC,aAAa,kCACbrE,YAAc,CAACvD,GAAI,oCAAqCC,eAAgB,YACxEkD,MAAQ,CAACnD,GAAI,oCAAqCC,eAAgB,YAClED,GAAG,qBACCmH,IAEPH,GAAY,kBAACc,EAAA,EAAD,CAAY9H,GAAG,yBAAyB+H,QAAQ,YAAYC,UAAU,OAAOC,MAAM,QACvE5E,UAAWwD,EAAQ1G,SAAU8G,GACtD,yBAAK5D,UAAWwD,EAAQqB,SACrBnB,GAAeD,GAAqB,kBAACqB,EAAA,EAAD,CAAMnI,GAAG,0BAA0BoI,KAAMtB,EAAmBiB,QAAQ,aAAa,mBACtH,6BACA,kBAACM,EAAA,EAAD,CACInH,KAAK,SACL+G,MAAM,UACNF,QAAQ,YACR1E,UAAU,4BACViF,WAAY1B,EACZ2B,QAAS,SAAClB,GAAD,OAAW,EAAKvD,MAAMuD,KAEjC,kBAAC,IAAD,CAAkBrH,GAAG,iCAAiCC,eAAe,YAEtE2G,GAAW,kBAAC4B,EAAA,EAAD,CAAkBC,KAAM,GAAIpF,UAAWwD,EAAQ6B,sB,0BAOzE,SAAaC,GAAO,IAAD,OACjB,OAAO,SAAAtB,GACL,EAAK3G,MAAMkB,SDhHV,SAAqB+G,EAAMlB,GAChC,MAAO,CACLvG,KAAMC,IACNwH,OACAlB,SC4GsBmB,CAAYD,EAAMtB,EAAMb,OAAOiB,W,mBAIvD,SAAMJ,GACJA,EAAMwB,iBAEN,MAAkDlC,KAAKjG,MAA/Cc,EAAR,EAAQA,SAAUoC,EAAlB,EAAkBA,SAAUhC,EAA5B,EAA4BA,SAAUyD,EAAtC,EAAsCA,QACtCzD,EAAS8C,EAAwBlD,EAAUoC,GAAU,IAAQrB,MAAK,SAACC,GAC7DA,EAASjB,SACXK,EAASwD,EAAiB5C,EAASjB,QAAS8D,W,GAvGhCyD,IAAMC,eA2IXC,eAfS,SAACtH,GACvB,MAA+CA,EAAMuH,MAA7CrC,EAAR,EAAQA,QAASpF,EAAjB,EAAiBA,SAAUoC,EAA3B,EAA2BA,SAAUF,EAArC,EAAqCA,OACrC,EAA4ChC,EAAMI,OAElD,MAAO,CACL8E,UACApF,WACAoC,WACAF,SACApC,MAPF,EAAQA,MAQNU,MARF,EAAeA,MASb8E,kBATF,EAAsBA,qBAaTkC,CAAyBE,aAlKzB,SAAAC,GAAK,MAAK,CACvBT,eAAgB,CACdT,MAAOmB,IAAM,KACbC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,WAAY,GACZC,YAAa,IAEfC,UAAW,CACTC,aAAcR,EAAMS,QAAQ,IAE9B1B,QAAS,CACPmB,SAAU,WACVQ,MAAO,OACPC,UAAW,UAEb3J,QAAS,CACPqJ,UAAW,EACXG,aAAc,MA+IsBT,CAAmBxC,I,6CChD3D,IAWesC,eAXS,SAACtH,GACvB,MAA4BA,EAAMuH,MAGlC,MAAO,CACLrC,QAJF,EAAQA,QAKNlD,OALF,EAAiBA,OAMfpC,MALgBI,EAAMI,OAAhBR,SASK0H,CAAyBE,aA9HzB,SAAAC,GAAK,MAAK,CACvBO,UAAW,CACTC,aAAcR,EAAMS,QAAQ,IAE9BzJ,QAAS,CACPqJ,UAAWL,EAAMS,QAAQ,IAE3BG,YAAa,CACXN,WAAYN,EAAMS,SAAS,GAC3BI,YAAab,EAAMS,SAAS,IAE9BK,gBAAiB,CACfC,YAAaf,EAAMS,QAAQ,GAC3BO,aAAchB,EAAMS,QAAQ,OAiHQV,EA7GxC,YAAgF,IAAvDtC,EAAsD,EAAtDA,QAASlD,EAA6C,EAA7CA,OAAQmD,EAAqC,EAArCA,QAASvF,EAA4B,EAA5BA,MAAO+D,EAAqB,EAArBA,QAASzD,EAAY,EAAZA,SACjEwI,qBAAU,WACF9I,GAAUA,EAAMI,OAA6B,SAAnB2D,EAAQoB,QACtCpB,EAAQM,QAAR,qBAA8BN,EAAQO,SAASC,QAA/C,OAAwDR,EAAQO,SAASE,UAI7E,IAAImB,EAAe,KAEfvD,EAAOe,OACTwC,EAAe,kBAACa,EAAA,EAAD,CAAYG,MAAM,QAAQ5E,UAAWwD,EAAQ1G,SAC1D,kBAAC,IAAD,CAAcQ,MAAO+C,EAAOe,SAIhC,IAAIjD,EAAW,GAEXF,GAASA,EAAMI,QACjBF,EAAWF,EAAME,UAGnB,IAAMsC,EAAQ,SAACuD,GACbA,EAAMwB,iBACNjH,EAAS8C,EAAwBpD,EAAME,SAAU,IAAI,IAAOe,MAAK,SAACC,GAC5DA,EAASjB,SACXK,EAASwD,EAAiB5C,EAASjB,QAAS8D,QAUlD,OACE,6BACE,kBAACyC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAK3E,UAAU,YAChD,kBAAC,IAAD,CAAkBrD,GAAG,iCAAiCC,eAAe,uBAEvE,kBAAC6H,EAAA,EAAD,CAAYC,QAAQ,YAAY1E,UAAWwD,EAAQ6C,UAAY,aAC7D,kBAAC,IAAD,CAAkB1J,GAAG,kCAAkCC,eAAe,0BAIxE,0BAAMwG,OAAO,GAAGW,SAAU,SAACC,GAAD,OAAWvD,EAAMuD,KACzC,kBAACgD,EAAA,EAAD,CAAMC,gBAAc,EAACjH,UAAWwD,EAAQkD,aACtC,kBAACQ,EAAA,EAAD,CACEC,QAAM,EACNC,gBAAc,EACdpH,UAAWwD,EAAQoD,gBACnB3B,WAAY1B,EACZ2B,QAAS,SAAClB,GAAD,OAAWvD,EAAMuD,KAC3B,kBAACqD,EAAA,EAAD,KAAgB,kBAACC,EAAA,EAAD,KAASnJ,EAASoJ,OAAO,EAAG,KAC3C,kBAACC,EAAA,EAAD,CAAcxH,UAAU,WAAWyH,QAAStJ,KAE9C,kBAAC+I,EAAA,EAAD,CACEC,QAAM,EACNC,gBAAc,EACdpH,UAAWwD,EAAQoD,gBACnB3B,WAAY1B,EACZ2B,QAAS,SAAClB,GAAD,OA/BJ,SAACA,GACdA,EAAMwB,iBACNxD,EAAQH,KAAR,qBAA2BG,EAAQO,SAASC,QAA5C,OAAqDR,EAAQO,SAASE,OA6B1CiF,CAAO1D,KAE3B,kBAACqD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAkB3K,GAAG,+CAA+CC,eAAe,QAIvF,kBAAC4K,EAAA,EAAD,CACExH,UAAU,WACVyH,QACE,kBAAC,IAAD,CACE9K,GAAG,uCACHC,eAAe,4BAOxBgH,Q,0DCxGM+D,GARW,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAWC,EAAd,0BACxB,yBAAUA,EAAOD,EAAOE,aAAeF,EAAOE,aAAeF,EAAOjL,K,0DCahEoL,GAAsBrL,aAAe,CACzC,kBAAqB,CACnBC,GAAI,sCACJC,eAAgB,yCAElB,qBAAwB,CACtBD,GAAI,yCACJC,eAAgB,sDA6ELiJ,gBA3FA,iBAAO,CACpBmC,IAAK,CACHC,WAAY,EACZC,cAAe,MAwFJrC,CAAmBzI,cAzEf,SAAC,GAAsC,IAArC+K,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,KAAM5E,EAAsB,EAAtBA,QAAYqE,EAAU,mBAC/CQ,EAAyBD,EAAzBC,QAASC,EAAgBF,EAAhBE,YACX/K,EAAOsC,cAEP0I,EAAO,GACPC,EAAQ,GAGd,IAAK,IAAI1H,KAASqH,EAChB,GAAKA,EAAOrH,GAAZ,CAGA,IAAInE,EAAK0L,EAAQvH,GACjB,GAAInE,EAAI,CACN,GAAI6L,EAAM7L,GACR,SAEF6L,EAAM7L,IAAM,OAEZA,EAAKmE,EAEP,IAAI2H,EAAaH,EAAY3L,GACzBmD,OAAK,EACT,GAAI2I,EAAY,CACd,GAAIA,EAAW9L,GAAI,CACjB,IAAM+L,EAAcX,GAAoBU,EAAW9L,IAC/C+L,IACF5I,EAAQvC,EAAKI,cAAc+K,IAG1B5I,IACHA,EAAQ2I,EAAWE,aAGlB7I,IACHA,EAAQ,kBAAC,IAAD,CACNnD,GAAG,iCACHC,eAAe,iBACfG,OAAQ,CAAC+D,YAIbyH,EAAK1G,KACH,kBAACqF,EAAA,EAAD,CACEE,gBAAc,EACdwB,OAAK,EACLC,IAAKlM,EACLqD,UAAWwD,EAAQwE,KACpB,kBAACc,GAAA,EAAD,CACGC,SAAO,EACPC,eAAa,EACb/D,UAAQ,EACRjF,UAAU,qBAEZ,kBAACwH,EAAA,EAAD,CAAcC,QAAS3H,EAAOE,UAAU,eAK9C,OACE,kBAACgH,EAAA,EAASa,EACPU,OC7CDU,G,4MAUJ7F,OAAS,eAACzC,EAAD,wDAAcwH,EAAd,uDAAqB,GAArB,OAA4B,SAACnE,GAGpC,GAFAA,EAAMwB,sBAEQxI,IAAV2D,EAAJ,CAKA,IAAMG,EAAQrD,OAAO+D,KAAK2G,GAAQe,QAAO,SAAApI,GACvC,QAASqH,EAAOrH,MACfqI,KAAK,KAER,EAA8B,EAAK9L,MAA3BkB,EAAR,EAAQA,SAAUyD,EAAlB,EAAkBA,QAClBzD,EAASsC,EAAeF,EAAOG,IAAQ5B,MAAK,SAACC,GACvCA,EAASjB,SACXK,EAASwD,EAAiB5C,EAASjB,QAAS8D,GAAS,EAAM,CAACoH,QAASjK,EAASd,e,uDAxBpF,WACE,MAA6CiF,KAAKjG,MAA1CkB,EAAR,EAAQA,SAAUN,EAAlB,EAAkBA,MAAO+D,EAAzB,EAAyBA,QAAS4F,EAAlC,EAAkCA,OAC5B3J,GAAUA,EAAMI,OAAUuJ,GAA8B,SAAnB5F,EAAQoB,QACjDpB,EAAQM,QAAR,qBAA8BN,EAAQO,SAASC,QAA/C,OAAwDR,EAAQO,SAASE,OAG3ElE,EAAS6B,EAAqB,O,oBAuBhC,WACE,MAAoDkD,KAAKjG,MAAjDmG,EAAR,EAAQA,QAASD,EAAjB,EAAiBA,QAAStF,EAA1B,EAA0BA,MAAOoC,EAAjC,EAAiCA,OAAQuH,EAAzC,EAAyCA,OAEnCO,EAASlK,EAAMmE,QAAQ+F,QAAU,GACjCC,EAAOnK,EAAMmE,QAAQgG,MAAQ,GAEnC,OACE,6BACE,kBAAC3D,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAK3E,UAAU,YAChD,kBAAC,IAAD,CACErD,GAAG,2BACHC,eAAe,mBACfG,OAAQ,CAACqB,YAAaH,EAAMG,gBAGhC,kBAACqG,EAAA,EAAD,CAAYC,QAAQ,YAAY1E,UAAU,oBACvC/B,EAAME,UAGT,kBAACsG,EAAA,EAAD,CAAYC,QAAQ,YAAY2E,cAAY,EAACrJ,UAAU,YACrD,kBAAC,IAAD,CACErD,GAAG,0BACHC,eAAe,+BACfG,OAAQ,CAACuM,kBACP,kBAACC,EAAA,EAAD,CACEC,UAAU,SACVC,MAAO,kBAAC,IAAD,CACL9M,GAAG,iCACHC,eAAe,uDACfG,OAAQ,CACN2M,YAAa9B,EAAO5G,iBAIxB,4BAAI,kBAAC,GAAD,CAAmB4G,OAAQA,UAKvC,kBAAC,GAAD,CAAYgB,OAAK,EAAC3B,gBAAc,EAACjH,UAAWwD,EAAQmG,WAAYxB,OAAQA,EAAQC,KAAMA,EAAKD,SAE3F,kBAAC1D,EAAA,EAAD,CAAYzE,UAAU,YACpB,kBAAC,IAAD,CACErD,GAAG,8BACHC,eAAe,oEAInB,0BAAMwG,OAAO,GAAGW,SAAUT,KAAKF,YAAOpG,EAAWmL,IAC/C,kBAACyB,EAAA,EAAD,KACE,yBAAK5J,UAAWwD,EAAQqB,SACtB,kBAACG,EAAA,EAAD,CACEJ,MAAM,YACN5E,UAAWwD,EAAQ2D,OACnBlC,WAAY1B,EACZ2B,QAAS5B,KAAKF,QAAO,EAAO+E,IAE5B,kBAAC,IAAD,CAAkBxL,GAAG,qCAAqCC,eAAe,YAEzE2G,GAAWA,IAAYsG,KACvB,kBAAC1E,EAAA,EAAD,CAAkBC,KAAM,GAAIpF,UAAWwD,EAAQ6B,kBAEnD,yBAAKrF,UAAWwD,EAAQqB,SACtB,kBAACG,EAAA,EAAD,CACEnH,KAAK,SACL+G,MAAM,UACNF,QAAQ,YACR1E,UAAU,oBACViF,WAAY1B,EACZ2B,QAAS5B,KAAKF,QAAO,EAAM+E,IAE3B,kBAAC,IAAD,CAAkBxL,GAAG,oCAAoCC,eAAe,WAEzE2G,IAAYsG,KAAyB,kBAAC1E,EAAA,EAAD,CAAkBC,KAAM,GAAIpF,UAAWwD,EAAQ6B,mBAIxFyE,IAASzJ,EAAOe,KAAhB0I,EAAsB,kBACrB,kBAACrF,EAAA,EAAD,CAAYC,QAAQ,YAAYE,MAAM,QAAQ5E,UAAWwD,EAAQ1G,SAC/D,kBAAC,IAAD,CAAcQ,MAAO+C,EAAOe,iB,GA7GpBqE,IAAMC,eA8IbC,gBAZS,SAACtH,GACvB,IAAQJ,EAAUI,EAAMI,OAAhBR,MACR,EAA4BI,EAAMuH,MAElC,MAAO,CACLrC,QAHF,EAAQA,QAINlD,OAJF,EAAiBA,OAKfpC,QACA2J,OAAQ3J,EAAMmE,QAAQwF,QAAU,MAIrBjC,CAAyBE,aArKzB,SAAAC,GAAK,MAAK,CACvBT,eAAgB,CACdT,MAAOmB,IAAM,KACbC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,WAAY,GACZC,YAAa,IAEfuD,WAAY,CACVrD,aAAcR,EAAMS,QAAQ,IAE9B1B,QAAS,CACPsB,UAAWL,EAAMS,QAAQ,GACzBP,SAAU,WACV+D,QAAS,gBAEXjN,QAAS,CACPqJ,UAAWL,EAAMS,QAAQ,GACzBD,aAAcR,EAAMS,QAAQ,OAkJQV,CAAmBoD,KCvKrDe,G,uKACJ,WACE1G,KAAKjG,MAAMkB,SAASD,iB,oBAGtB,WACE,IAEMiF,EAAoB,OAFRD,KAAKjG,MAAfY,MAGR,OACE,kBAACgM,EAAA,EAAD,CAAkB1G,QAASA,EAAS2G,gBAAgB,GAClD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,cAAcC,OAAK,EAACzF,UAAWtB,IAC3C,kBAAC,IAAD,CAAO8G,KAAK,iBAAiBC,OAAK,EAACzF,UAAW0F,IAC9C,kBAAC,IAAD,CAAOF,KAAK,WAAWC,OAAK,EAACzF,UAAWsE,KACxC,kBAACqB,EAAA,EAAD,CAAmBnH,OAAO,sB,GAfVsC,IAAMC,eAsCjBC,gBARS,SAACtH,GAGvB,MAAO,CACLJ,MAHgBI,EAAMI,OAAhBR,SAOK0H,CAAyBE,aAzCzB,iBAAO,KAyCkBA,CAAmBmE,M,gCCzDpD,SAASlL,EAAgBJ,EAAMC,GACpC,IAAMC,EAAI,GAEND,EAAMgE,SAER/D,EAAE+D,OAAShE,EAAMgE,QAGnB,IAAI4H,EAAe7L,EACnB,OAAQA,GACN,IAAK,QACL,IAAK,UACL,IAAK,OACHE,EAAEkC,MAAQnC,EAAMmC,OAAS,GACzBlC,EAAEmC,UAAYpC,EAAMoC,WAAa,GACjCnC,EAAEoC,aAAerC,EAAMqC,cAAgB,GACnCrC,EAAM6L,gBACR5L,EAAE4L,cAAgB7L,EAAM6L,eAEtB7L,EAAM8L,UACR7L,EAAE6L,QAAU9L,EAAM8L,SAEhB9L,EAAM+L,eAER9L,EAAEkC,OAAS,IAAMnC,EAAM+L,cAEzB,MAEF,QACEH,EAAe,KAOnB,OAJIA,IACF3L,EAAEF,KAAO6L,GAGJ3L,EApCT,mC,gCCAO,SAASC,EAAuB8L,GAErC,IAAM5N,EAAS,IAAI6N,WAAW,IAK9B,OAJAC,OAAOC,gBAAgB/N,GAEvB4N,EAAItM,MAAQ0M,MAAMC,UAAUC,IAAIC,KAAKnO,GAAQ,SAAAoO,GAAC,OAAIA,EAAEC,SAAS,OAAKjC,KAAK,IAEhEwB,EAPT,mC,gCCAA,8CAMO,SAASlL,EAAiBnC,GAU/B,OATIA,EAAM+N,UAGN/N,EADEA,EAAM6B,SACA,IAAItC,IAAcN,IAAuCe,EAAM6B,UAE/D,IAAItC,IAAcP,MAIvBgB,I,kLCsCT,IAQeqI,eARS,SAACtH,GAGvB,MAAO,CACLf,MAHgBe,EAAMI,OAAhBnB,SAOKqI,EA/Cf,YAAuC,IAApBrI,EAAmB,EAAnBA,MAAOiB,EAAY,EAAZA,SAMxB,OACE,kBAAC+M,EAAA,EAAD,CAAMC,MAAI,EAACC,MAAM,UACd1B,IAAmB,OAAVxM,EAATwM,EAAyB,kBACxB,kBAAC2B,EAAA,EAAD,CAAgBzL,UAAU,mBAE3B8J,IAAmB,OAAVxM,EAATwM,EAAyB,kBACxB,6BACE,kBAACrF,EAAA,EAAD,CAAYzE,UAAU,WAAW0E,QAAQ,KAAK2E,cAAY,EAACmC,MAAM,UAC/D,kBAAC,IAAD,CAAkB7O,GAAG,iCAAiCC,eAAe,iCAEvE,kBAAC6H,EAAA,EAAD,CAAY+G,MAAM,SAAS5G,MAAM,SAC/B,kBAAC,IAAD,CAActH,MAAOA,KAEvB,kBAAC0H,EAAA,EAAD,CACEf,WAAS,EACTW,MAAM,UACNF,QAAQ,YACR1E,UAAU,4BACVkF,QAAS,SAAClB,GAAD,OAvBL,SAACA,GACbA,EAAMwB,iBACNjH,EAASmB,eAqBmBgM,CAAM1H,KAE1B,kBAAC,IAAD,CAAkBrH,GAAG,kCAAkCC,eAAe,mB,yGCJ5EqN,EAAmB,SAAC5M,GACxB,IACEmG,EASEnG,EATFmG,QACAmI,EAQEtO,EARFsO,YACAzB,EAOE7M,EAPF6M,eACA3G,EAMElG,EANFkG,QACAqI,EAKEvO,EALFuO,SACA5L,EAIE3C,EAJF2C,UAGG6L,GACDxO,EAHFyO,YAGEzO,EAFF0O,WARF,YAUI1O,EAVJ,IAYM2O,EAAOL,EAAc,KACzB,yBAAKM,IAAKC,oBAA6ClM,UAAU,UAAUmM,IAAI,kBAE3EC,EAAU7I,EAAU,kBAAC,EAAD,MAAc2G,EAAiB0B,EAAW,kBAACS,EAAA,EAAD,KAAgBT,GAEpF,OACE,kBAACN,EAAA,EAAD,eAAMgB,WAAS,EAACC,QAAQ,SAASC,WAAW,SAASC,UAAU,SAASlG,QAAS,EAC/EvG,UAAW0M,IAAWlJ,EAAQmJ,KAAM3M,IAAgB6L,GACpD,yBAAK7L,UAAWwD,EAAQqB,SACtB,yBAAK7E,UAAWwD,EAAQ4I,SACrBJ,EACAI,IAGL,4BAAQpM,UAAU,qBAChB,kBAAC,IAAD,CACErD,GAAG,wBACHC,eAAe,wDACfG,OAAQ,CACNuI,KAAM,SAAAsH,GAAM,OAlCE,SAAAtH,GAAI,OAAI,gCAASA,GAkCfuH,CAAkBD,UAQ9C3C,EAAiB6C,aAAe,CAC9BnB,aAAa,EACbzB,gBAAgB,EAChB3G,SAAS,GAcIsC,iBAnFA,SAAAC,GAAK,MAAK,CACvB6G,KAAM,CACJ5C,QAAS,OACTgD,KAAM,GAERX,QAAS,CACPpG,SAAU,WACVQ,MAAO,QAETwG,QAAS,CACP7G,WAAY,GACZ8G,eAAgB,aAChBpG,YAAaf,EAAMS,QAAQ,GAC3BO,aAAchB,EAAMS,QAAQ,IAE9B1B,QAAS,CACP2B,MAAO,OACP0G,SAAU,IACVnD,QAAS,OACTgD,KAAM,EACNP,WAAY,aA+DD3G,CAAmBoE","file":"static/js/containers-login.44aaa551.chunk.js","sourcesContent":["import { injectIntl, defineMessages } from 'react-intl';\n\nexport const ERROR_LOGIN_VALIDATE_MISSINGUSERNAME = 'konnect.error.login.validate.missingUsername';\nexport const ERROR_LOGIN_VALIDATE_MISSINGPASSWORD = 'konnect.error.login.validate.missingPassword';\nexport const ERROR_LOGIN_FAILED = 'konnect.error.login.failed';\nexport const ERROR_HTTP_NETWORK_ERROR = 'konnect.error.http.networkError';\nexport const ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS = 'konnect.error.http.unexpectedResponseStatus';\nexport const ERROR_HTTP_UNEXPECTED_RESPONSE_STATE = 'konnect.error.http.unexpectedResponseState';\n\n// Translatable error messages.\nconst translations = defineMessages({\n  [ERROR_LOGIN_VALIDATE_MISSINGUSERNAME]: {\n    id: ERROR_LOGIN_VALIDATE_MISSINGUSERNAME,\n    defaultMessage: 'Please enter a valid username'\n  },\n  [ERROR_LOGIN_VALIDATE_MISSINGPASSWORD]: {\n    id: ERROR_LOGIN_VALIDATE_MISSINGPASSWORD,\n    defaultMessage: 'Please enter a valid password'\n  },\n  [ERROR_LOGIN_FAILED]: {\n    id: ERROR_LOGIN_FAILED,\n    defaultMessage: 'Logon failed. Please verify your credentials and try again.'\n  },\n  [ERROR_HTTP_NETWORK_ERROR]: {\n    id: ERROR_HTTP_NETWORK_ERROR,\n    defaultMessage: 'Network error. Please check your connection and try again.'\n  },\n  [ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS]: {\n    id: ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS,\n    defaultMessage: 'Unexpected HTTP response: {status}. Please check your connection and try again.'\n  },\n  [ERROR_HTTP_UNEXPECTED_RESPONSE_STATE]: {\n    id: ERROR_HTTP_UNEXPECTED_RESPONSE_STATE,\n    defaultMessage: 'Unexpected response state: {state}'\n  }\n});\n\n// Error with values.\nexport class ExtendedError extends Error {\n  values = undefined;\n\n  constructor(message, values) {\n    super(message);\n    if (Error.captureStackTrace !== undefined) {\n      Error.captureStackTrace(this, ExtendedError);\n    }\n    this.values = values;\n  }\n}\n\n// Component to translate error text with values.\nfunction ErrorMessageComponent(props) {\n  const { error, intl } = props;\n\n  if (!error) {\n    return null;\n  }\n\n  const id = error.id ? error.id : error.message;\n  const messageDescriptor = Object.assign({}, {\n    id,\n    defaultMessage: error.id ? error.message : undefined\n  }, translations[id]);\n\n  return intl.formatMessage(messageDescriptor, error.values);\n}\n\nexport const ErrorMessage = injectIntl(ErrorMessageComponent);\n","import axios from 'axios';\n\nimport { newHelloRequest } from '../models/hello';\nimport { withClientRequestState } from '../utils';\nimport {\n  ExtendedError,\n  ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS,\n  ERROR_HTTP_UNEXPECTED_RESPONSE_STATE\n} from '../errors';\n\nimport { handleAxiosError } from './utils';\nimport * as types from './types';\n\nexport function receiveError(error) {\n  return {\n    type: types.RECEIVE_ERROR,\n    error\n  };\n}\n\nexport function resetHello() {\n  return {\n    type: types.RESET_HELLO\n  };\n}\n\nexport function receiveHello(hello) {\n  const { success, username, displayName } = hello;\n\n  return {\n    type: types.RECEIVE_HELLO,\n    state: success === true,\n    username,\n    displayName,\n    hello\n  };\n}\n\nexport function executeHello() {\n  return function(dispatch, getState) {\n    dispatch(resetHello());\n\n    const { flow, query } = getState().common;\n\n    const r = withClientRequestState(newHelloRequest(flow, query));\n    return axios.post('./identifier/_/hello', r, {\n      headers: {\n        'Kopano-Konnect-XSRF': '1'\n      }\n    }).then(response => {\n      switch (response.status) {\n        case 200:\n          // success.\n          return response.data;\n        case 204:\n          // not signed-in.\n          return {\n            success: false,\n            state: response.headers['kopano-konnect-state']\n          };\n        default:\n          // error.\n          throw new ExtendedError(ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS, response);\n      }\n    }).then(response => {\n      if (response.state !== r.state) {\n        throw new ExtendedError(ERROR_HTTP_UNEXPECTED_RESPONSE_STATE, response);\n      }\n\n      dispatch(receiveHello(response));\n      return Promise.resolve(response);\n    }).catch(error => {\n      error = handleAxiosError(error);\n\n      dispatch(receiveError(error));\n    });\n  };\n}\n\nexport function retryHello() {\n  return function(dispatch) {\n    dispatch(receiveError(null));\n\n    return dispatch(executeHello());\n  };\n}\n\nexport function requestLogoff() {\n  return {\n    type: types.REQUEST_LOGOFF\n  };\n}\n\nexport function receiveLogoff(state) {\n  return {\n    type: types.RECEIVE_LOGOFF,\n    state\n  };\n}\n\nexport function executeLogoff() {\n  return function(dispatch) {\n    dispatch(resetHello());\n    dispatch(requestLogoff());\n\n    const r = withClientRequestState({});\n    return axios.post('./identifier/_/logoff', r, {\n      headers: {\n        'Kopano-Konnect-XSRF': '1'\n      }\n    }).then(response => {\n      switch (response.status) {\n        case 200:\n          // success.\n          return response.data;\n        default:\n          // error.\n          throw new ExtendedError(ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS, response);\n      }\n    }).then(response => {\n      if (response.state !== r.state) {\n        throw new ExtendedError(ERROR_HTTP_UNEXPECTED_RESPONSE_STATE, response);\n      }\n\n      dispatch(receiveLogoff(response.success === true));\n      return Promise.resolve(response);\n    }).catch(error => {\n      error = handleAxiosError(error);\n\n      dispatch(receiveError(error));\n    });\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {useIntl} from 'react-intl';\n\nconst TextInput = (props) => {\n    const intl = useIntl();\n    const label = props.label;\n    const extraClassName = props.extraClassName;\n\n    delete props.label;\n    delete props.extraClassName;\n\n    return (\n        <div>\n            <label className=\"oc-label\"\n                   htmlFor={props.id}>{intl.formatMessage(label)}</label>\n            <input className={`oc-input ${extraClassName ? extraClassName : ''}`} {...props}\n                   placeholder={props.placeholder ? intl.formatMessage(props.placeholder) : null}/>\n        </div>);\n};\n\nTextInput.propTypes = {\n    placeholder: PropTypes.object,\n    label: PropTypes.object,\n    id: PropTypes.string,\n    extraClassName: props.string,\n}\n\nexport default TextInput;\n","import axios from 'axios';\nimport queryString from 'query-string';\n\nimport { newHelloRequest } from '../models/hello';\nimport { withClientRequestState } from '../utils';\nimport {\n  ExtendedError,\n  ERROR_LOGIN_VALIDATE_MISSINGUSERNAME,\n  ERROR_LOGIN_VALIDATE_MISSINGPASSWORD,\n  ERROR_LOGIN_FAILED,\n  ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS,\n  ERROR_HTTP_UNEXPECTED_RESPONSE_STATE\n} from '../errors';\n\nimport * as types from './types';\nimport { receiveHello } from './common';\nimport { handleAxiosError } from './utils';\n\n// Modes for logon.\nexport const ModeLogonUsernameEmptyPasswordCookie = '0';\nexport const ModeLogonUsernamePassword = '1';\n\nexport function updateInput(name, value) {\n  return {\n    type: types.UPDATE_INPUT,\n    name,\n    value\n  };\n}\n\nexport function receiveValidateLogon(errors) {\n  return {\n    type: types.RECEIVE_VALIDATE_LOGON,\n    errors\n  };\n}\n\nexport function requestLogon(username, password) {\n  return {\n    type: types.REQUEST_LOGON,\n    username,\n    password\n  };\n}\n\nexport function receiveLogon(logon) {\n  const { success, errors } = logon;\n\n  return {\n    type: types.RECEIVE_LOGON,\n    success,\n    errors\n  };\n}\n\nexport function requestConsent(allow=false) {\n  return {\n    type: allow ? types.REQUEST_CONSENT_ALLOW : types.REQUEST_CONSENT_CANCEL\n  };\n}\n\nexport function receiveConsent(logon) {\n  const { success, errors } = logon;\n\n  return {\n    type: types.RECEIVE_CONSENT,\n    success,\n    errors\n  };\n}\n\nexport function executeLogon(username, password, mode=ModeLogonUsernamePassword) {\n  return function(dispatch, getState) {\n    dispatch(requestLogon(username, password));\n    dispatch(receiveHello({\n      username\n    })); // Reset any hello state on logon.\n\n    const { flow, query } = getState().common;\n\n    // Prepare params based on mode.\n    const params = [];\n    switch (mode) {\n      case ModeLogonUsernamePassword:\n        // Username with password.\n        params.push(username, password, mode);\n        break;\n\n      case ModeLogonUsernameEmptyPasswordCookie:\n        // Username with empty password - this only works when the user is already signed in.\n        params.push(username, '', mode);\n        break;\n    }\n\n    const r = withClientRequestState({\n      params: params,\n      hello: newHelloRequest(flow, query)\n    });\n    return axios.post('./identifier/_/logon', r, {\n      headers: {\n        'Kopano-Konnect-XSRF': '1'\n      }\n    }).then(response => {\n      switch (response.status) {\n        case 200:\n          // success.\n          return response.data;\n        case 204:\n          // login failed.\n          return {\n            success: false,\n            state: response.headers['kopano-konnect-state'],\n            errors: {\n              http: new Error(ERROR_LOGIN_FAILED)\n            }\n          };\n        default:\n          // error.\n          throw new ExtendedError(ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS, response);\n      }\n    }).then(response => {\n      if (response.state !== r.state) {\n        throw new ExtendedError(ERROR_HTTP_UNEXPECTED_RESPONSE_STATE, response);\n      }\n\n      let { hello } = response;\n      if (!hello) {\n        hello = {\n          success: response.success,\n          username\n        };\n      }\n      dispatch(receiveHello(hello));\n      dispatch(receiveLogon(response));\n      return Promise.resolve(response);\n    }).catch(error => {\n      error = handleAxiosError(error);\n      const errors = {\n        http: error\n      };\n\n      dispatch(receiveValidateLogon(errors));\n      return {\n        success: false,\n        errors: errors\n      };\n    });\n  };\n}\n\nexport function executeConsent(allow=false, scope='') {\n  return function(dispatch, getState) {\n    dispatch(requestConsent(allow));\n\n    const { query } = getState().common;\n\n    const r = withClientRequestState({\n      allow,\n      scope,\n      client_id: query.client_id || '', // eslint-disable-line camelcase\n      redirect_uri: query.redirect_uri || '', // eslint-disable-line camelcase\n      ref: query.state || '',\n      flow_nonce: query.nonce || '' // eslint-disable-line camelcase\n    });\n    return axios.post('./identifier/_/consent', r, {\n      headers: {\n        'Kopano-Konnect-XSRF': '1'\n      }\n    }).then(response => {\n      switch (response.status) {\n        case 200:\n          // success.\n          return response.data;\n        case 204:\n          // cancel reply.\n          return {\n            success: true,\n            state: response.headers['kopano-konnect-state']\n          };\n        default:\n          // error.\n          throw new ExtendedError(ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS, response);\n      }\n    }).then(response => {\n      if (response.state !== r.state) {\n        throw new ExtendedError(ERROR_HTTP_UNEXPECTED_RESPONSE_STATE, response);\n      }\n\n      dispatch(receiveConsent(response));\n      return Promise.resolve(response);\n    }).catch(error => {\n      error = handleAxiosError(error);\n      const errors = {\n        http: error\n      };\n\n      dispatch(receiveValidateLogon(errors));\n      return {\n        success: false,\n        errors: errors\n      };\n    });\n  };\n}\n\nexport function validateUsernamePassword(username, password, isSignedIn) {\n  return function(dispatch) {\n    return new Promise((resolve, reject) => {\n      const errors = {};\n\n      if (!username) {\n        errors.username = new Error(ERROR_LOGIN_VALIDATE_MISSINGUSERNAME);\n      }\n      if (!password && !isSignedIn) {\n        errors.password = new Error(ERROR_LOGIN_VALIDATE_MISSINGPASSWORD);\n      }\n\n      dispatch(receiveValidateLogon(errors));\n      if (Object.keys(errors).length === 0) {\n        resolve(errors);\n      } else {\n        reject(errors);\n      }\n    });\n  };\n}\n\nexport function executeLogonIfFormValid(username, password, isSignedIn) {\n  return (dispatch) => {\n    return dispatch(\n      validateUsernamePassword(username, password, isSignedIn)\n    ).then(() => {\n      const mode = isSignedIn ? ModeLogonUsernameEmptyPasswordCookie : ModeLogonUsernamePassword;\n      return dispatch(executeLogon(username, password, mode));\n    }).catch((errors) => {\n      return {\n        success: false,\n        errors: errors\n      };\n    });\n  };\n}\n\nexport function advanceLogonFlow(success, history, done=false, extraQuery={}) {\n  return (dispatch, getState) => {\n    if (!success) {\n      return;\n    }\n\n    const { flow, query, hello } = getState().common;\n    const q = Object.assign({}, query, extraQuery);\n\n    switch (flow) {\n      case 'oauth':\n      case 'consent':\n      case 'oidc':\n        if (hello.details.flow !== flow) {\n          // Ignore requested flow if hello flow does not match.\n          break;\n        }\n\n        if (!done && hello.details.next === 'consent') {\n          history.replace(`/consent${history.location.search}${history.location.hash}`);\n          return;\n        }\n        if (hello.details.continue_uri) {\n          q.prompt = 'none';\n          window.location.replace(hello.details.continue_uri + '?' + queryString.stringify(q));\n          return;\n        }\n\n        break;\n\n      default:\n        // Legacy stupid modes.\n        if (q.continue && q.continue.indexOf(document.location.origin) === 0) {\n          window.location.replace(q.continue);\n          return;\n        }\n    }\n\n    // Default action.\n    let target = '/welcome';\n    if (history.action === 'REPLACE') {\n      target = target + history.location.search + history.location.hash;\n    }\n\n    dispatch(receiveValidateLogon({})); // XXX(longsleep): hack to reset loading and errors.\n    history.push(target);\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport green from '@material-ui/core/colors/green';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nimport TextInput from '../../components/TextInput'\n\nimport { updateInput, executeLogonIfFormValid, advanceLogonFlow } from '../../actions/login';\nimport { ErrorMessage } from '../../errors';\n\nconst styles = theme => ({\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12\n  },\n  subHeader: {\n    marginBottom: theme.spacing(3)\n  },\n  wrapper: {\n    position: 'relative',\n    width: '100%',\n    textAlign: 'center'\n  },\n  message: {\n    marginTop: 5,\n    marginBottom: 5\n  }\n});\n\nclass Login extends React.PureComponent {\n  state = {};\n\n  componentDidMount() {\n    const { hello, query, dispatch, history } = this.props;\n    if (hello && hello.state && history.action !== 'PUSH') {\n      if (!query.prompt || query.prompt.indexOf('select_account') == -1) {\n        dispatch(advanceLogonFlow(true, history));\n        return;\n      }\n\n      history.replace(`/chooseaccount${history.location.search}${history.location.hash}`);\n      return;\n    }\n  }\n\n  render() {\n    const { loading, errors, classes, username, passwordResetLink } = this.props;\n    const loginFailed = errors.http;\n    const hasError = errors.http || errors.username || errors.password;\n    const errorMessage = errors.http\n      ? <ErrorMessage error={errors.http}></ErrorMessage>\n      : (errors.username\n        ? <ErrorMessage error={errors.username}></ErrorMessage>\n        : <ErrorMessage error={errors.password}></ErrorMessage>);\n    const extraPropsUsername = {\n      \"aria-invalid\" : (errors.username || errors.http) ? 'true' : 'false'\n    };\n    const extraPropsPassword = {\n      \"aria-invalid\" : (errors.password || errors.http) ? 'true' : 'false',\n    };\n\n    if(errors.username || errors.http){\n      extraPropsUsername['extraClassName'] = 'error';\n      extraPropsUsername['aria-describedby'] = 'oc-login-error-message';\n    }\n\n    if(errors.password || errors.http){\n      extraPropsPassword['extraClassName'] = 'error';\n      extraPropsPassword['aria-describedby'] = 'oc-login-error-message';\n    }\n\n      return (\n          <div>\n            {/* eslint-disable-next-line react-intl-format/missing-formatted-message */}\n            <h1 className=\"oc-invisible-sr\"> Login </h1>\n            <form action=\"\" className=\"oc-login-form\" onSubmit={(event) => this.logon(event)}>\n              <TextInput\n                  autoFocus\n                  autoCapitalize=\"off\"\n                  spellCheck=\"false\"\n                  value={username}\n                  onChange={this.handleChange('username')}\n                  autoComplete=\"kopano-account username\"\n                  placeholder={({id: \"konnect.login.usernameField.label\", defaultMessage: \"Username\"})}\n                  label={({id: \"konnect.login.usernameField.label\", defaultMessage: \"Username\"})}\n                  id=\"oc-login-username\"\n                  {...extraPropsUsername}\n              />\n              <TextInput\n                  type=\"password\"\n                  margin=\"normal\"\n                  onChange={this.handleChange('password')}\n                  autoComplete=\"kopano-account current-password\"\n                  placeholder={({id: \"konnect.login.usernameField.label\", defaultMessage: \"Password\"})}\n                  label={({id: \"konnect.login.usernameField.label\", defaultMessage: \"Password\"})}\n                  id=\"oc-login-password\"\n                  {...extraPropsPassword}\n              />\n              {hasError && <Typography id=\"oc-login-error-message\" variant=\"subtitle2\" component=\"span\" color=\"error\"\n                                       className={classes.message}>{errorMessage}</Typography>}\n              <div className={classes.wrapper}>\n                {loginFailed && passwordResetLink && <Link id=\"oc-login-password-reset\" href={passwordResetLink} variant=\"subtitle2\">{\"Reset password?\"}</Link>}\n                <br />\n                <Button\n                    type=\"submit\"\n                    color=\"primary\"\n                    variant=\"contained\"\n                    className=\"oc-button-primary oc-mt-l\"\n                    disabled={!!loading}\n                    onClick={(event) => this.logon(event)}\n                >\n                  <FormattedMessage id=\"konnect.login.nextButton.label\" defaultMessage=\"Log in\"></FormattedMessage>\n                </Button>\n                {loading && <CircularProgress size={24} className={classes.buttonProgress}/>}\n              </div>\n            </form>\n          </div>\n    );\n  }\n\n  handleChange(name) {\n    return event => {\n      this.props.dispatch(updateInput(name, event.target.value));\n    };\n  }\n\n  logon(event) {\n    event.preventDefault();\n\n    const { username, password, dispatch, history } = this.props;\n    dispatch(executeLogonIfFormValid(username, password, false)).then((response) => {\n      if (response.success) {\n        dispatch(advanceLogonFlow(response.success, history));\n      }\n    });\n  }\n}\n\nLogin.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  loading: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  passwordResetLink: PropTypes.string.isRequired,\n  errors: PropTypes.object.isRequired,\n  hello: PropTypes.object,\n  query: PropTypes.object.isRequired,\n\n  dispatch: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n  const { loading, username, password, errors} = state.login;\n  const { hello, query, passwordResetLink } = state.common;\n\n  return {\n    loading,\n    username,\n    password,\n    errors,\n    hello,\n    query,\n    passwordResetLink\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Login));\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\n\nimport { executeLogonIfFormValid, advanceLogonFlow } from '../../actions/login';\nimport { ErrorMessage } from '../../errors';\n\nconst styles = theme => ({\n  subHeader: {\n    marginBottom: theme.spacing(2)\n  },\n  message: {\n    marginTop: theme.spacing(2)\n  },\n  accountList: {\n    marginLeft: theme.spacing(-3),\n    marginRight: theme.spacing(-3)\n  },\n  accountListItem: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3)\n  }\n});\n\nfunction Chooseaccount({ loading, errors, classes, hello, history, dispatch }) {\n  useEffect(() => {\n    if ((!hello || !hello.state) && history.action !== 'PUSH') {\n      history.replace(`/identifier${history.location.search}${history.location.hash}`);\n    }\n  });\n\n  let errorMessage = null;\n\n  if (errors.http) {\n    errorMessage = <Typography color=\"error\" className={classes.message}>\n      <ErrorMessage error={errors.http}></ErrorMessage>\n    </Typography>;\n  }\n\n  let username = '';\n\n  if (hello && hello.state) {\n    username = hello.username;\n  }\n\n  const logon = (event) => {\n    event.preventDefault();\n    dispatch(executeLogonIfFormValid(hello.username, '', true)).then((response) => {\n      if (response.success) {\n        dispatch(advanceLogonFlow(response.success, history));\n      }\n    });\n  }\n\n  const logoff = (event) => {\n    event.preventDefault();\n    history.push(`/identifier${history.location.search}${history.location.hash}`);\n  }\n\n  return (\n    <div>\n      <Typography variant=\"h5\" component=\"h3\" className=\"oc-light\">\n        <FormattedMessage id=\"konnect.chooseaccount.headline\" defaultMessage=\"Choose an account\"></FormattedMessage>\n      </Typography>\n      <Typography variant=\"subtitle1\" className={classes.subHeader + \" oc-light\"}>\n        <FormattedMessage id=\"konnect.chooseaccount.subHeader\" defaultMessage=\"to sign in to Kopano\">\n        </FormattedMessage>\n      </Typography>\n\n      <form action=\"\" onSubmit={(event) => logon(event)}>\n        <List disablePadding className={classes.accountList}>\n          <ListItem\n            button\n            disableGutters\n            className={classes.accountListItem}\n            disabled={!!loading}\n            onClick={(event) => logon(event)}\n          ><ListItemAvatar><Avatar>{username.substr(0, 1)}</Avatar></ListItemAvatar>\n            <ListItemText className=\"oc-light\" primary={username} />\n          </ListItem>\n          <ListItem\n            button\n            disableGutters\n            className={classes.accountListItem}\n            disabled={!!loading}\n            onClick={(event) => logoff(event)}\n          >\n            <ListItemAvatar>\n              <Avatar>\n                <FormattedMessage id=\"konnect.chooseaccount.useOther.persona.label\" defaultMessage=\"?\">\n                </FormattedMessage>\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              className=\"oc-light\"\n              primary={\n                <FormattedMessage\n                  id=\"konnect.chooseaccount.useOther.label\"\n                  defaultMessage=\"Use another account\">\n                </FormattedMessage>\n              }\n            />\n          </ListItem>\n        </List>\n\n        {errorMessage}\n      </form>\n    </div>\n  );\n}\n\nChooseaccount.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  loading: PropTypes.string.isRequired,\n  errors: PropTypes.object.isRequired,\n  hello: PropTypes.object,\n\n  dispatch: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n  const { loading, errors } = state.login;\n  const { hello } = state.common;\n\n  return {\n    loading,\n    errors,\n    hello\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Chooseaccount));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ClientDisplayName = ({ client, ...rest }) => (\n  <span {...rest}>{client.display_name ? client.display_name : client.id}</span>\n);\n\nClientDisplayName.propTypes = {\n  client: PropTypes.object.isRequired\n};\n\nexport default ClientDisplayName;\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport { injectIntl, useIntl, defineMessages, FormattedMessage } from 'react-intl';\n\nconst styles = () => ({\n  row: {\n    paddingTop: 0,\n    paddingBottom: 0\n  }\n});\n\nconst scopeIDTranslations = defineMessages({\n  'scope_alias_basic': {\n    id: 'konnect.scopeDescription.aliasBasic',\n    defaultMessage: 'Access your basic account information'\n  },\n  'scope_offline_access': {\n    id: 'konnect.scopeDescription.offlineAccess',\n    defaultMessage: 'Keep the allowed access persistently and forever'\n  }\n});\n\nconst ScopesList = ({scopes, meta, classes, ...rest}) => {\n  const { mapping, definitions } = meta;\n  const intl = useIntl()\n\n  const rows = [];\n  const known = {};\n\n  // TODO(longsleep): Sort scopes according to priority.\n  for (let scope in scopes) {\n    if (!scopes[scope]) {\n      continue;\n    }\n    let id = mapping[scope];\n    if (id) {\n      if (known[id]) {\n        continue;\n      }\n      known[id] = true;\n    } else {\n      id = scope;\n    }\n    let definition = definitions[id];\n    let label ;\n    if (definition) {\n      if (definition.id) {\n        const translation = scopeIDTranslations[definition.id];\n        if (translation) {\n          label = intl.formatMessage(translation);\n        }\n      }\n      if (!label) {\n        label = definition.description;\n      }\n    }\n    if (!label) {\n      label = <FormattedMessage\n        id=\"konnect.scopeDescription.scope\"\n        defaultMessage=\"Scope: {scope}\"\n        values={{scope}}\n      />;\n    }\n\n    rows.push(\n      <ListItem\n        disableGutters\n        dense\n        key={id}\n        className={classes.row}\n      ><Checkbox\n          checked\n          disableRipple\n          disabled\n          className=\"oc-checkbox-dark\"\n        />\n        <ListItemText primary={label} className=\"oc-light\" />\n      </ListItem>\n    );\n  }\n\n  return (\n    <List {...rest}>\n      {rows}\n    </List>\n  );\n};\n\nScopesList.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  scopes: PropTypes.object.isRequired,\n  meta: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(injectIntl(ScopesList));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport renderIf from 'render-if';\nimport { FormattedMessage } from 'react-intl';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport green from '@material-ui/core/colors/green';\nimport Typography from '@material-ui/core/Typography';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport { executeConsent, advanceLogonFlow, receiveValidateLogon } from '../../actions/login';\nimport { ErrorMessage } from '../../errors';\nimport { REQUEST_CONSENT_ALLOW } from '../../actions/types';\nimport ClientDisplayName from '../../components/ClientDisplayName';\nimport ScopesList from '../../components/ScopesList';\n\nconst styles = theme => ({\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12\n  },\n  scopesList: {\n    marginBottom: theme.spacing(2)\n  },\n  wrapper: {\n    marginTop: theme.spacing(2),\n    position: 'relative',\n    display: 'inline-block'\n  },\n  message: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  }\n});\n\nclass Consent extends React.PureComponent {\n  componentDidMount() {\n    const { dispatch, hello, history, client } = this.props;\n    if ((!hello || !hello.state || !client) && history.action !== 'PUSH') {\n      history.replace(`/identifier${history.location.search}${history.location.hash}`);\n    }\n\n    dispatch(receiveValidateLogon({})); // XXX(longsleep): hack to reset loading and errors.\n  }\n\n  action = (allow=false, scopes={}) => (event) => {\n    event.preventDefault();\n\n    if (allow === undefined) {\n      return;\n    }\n\n    // Convert all scopes which are true to a scope value.\n    const scope = Object.keys(scopes).filter(scope => {\n      return !!scopes[scope];\n    }).join(' ');\n\n    const { dispatch, history } = this.props;\n    dispatch(executeConsent(allow, scope)).then((response) => {\n      if (response.success) {\n        dispatch(advanceLogonFlow(response.success, history, true, {konnect: response.state}));\n      }\n    });\n  }\n\n  render() {\n    const { classes, loading, hello, errors, client } = this.props;\n\n    const scopes = hello.details.scopes || {};\n    const meta = hello.details.meta || {};\n\n    return (\n      <div>\n        <Typography variant=\"h5\" component=\"h3\" className=\"oc-light\">\n          <FormattedMessage\n            id=\"konnect.consent.headline\"\n            defaultMessage=\"Hi {displayName}\"\n            values={{displayName: hello.displayName}}\n          />\n        </Typography>\n        <Typography variant=\"subtitle1\" className=\"oc-light oc-mb-m\">\n          {hello.username}\n        </Typography>\n\n        <Typography variant=\"subtitle1\" gutterBottom className=\"oc-light\">\n          <FormattedMessage\n            id=\"konnect.consent.message\"\n            defaultMessage=\"{clientDisplayName} wants to\"\n            values={{clientDisplayName:\n              <Tooltip\n                placement=\"bottom\"\n                title={<FormattedMessage\n                  id=\"konnect.consent.tooltip.client\"\n                  defaultMessage='Clicking \"Allow\" will redirect you to: {redirectURI}'\n                  values={{\n                    redirectURI: client.redirect_uri\n                  }}\n                ></FormattedMessage>}\n              >\n                <em><ClientDisplayName client={client}/></em>\n              </Tooltip>\n            }}\n          ></FormattedMessage>\n        </Typography>\n        <ScopesList dense disablePadding className={classes.scopesList} scopes={scopes} meta={meta.scopes}></ScopesList>\n\n        <Typography className=\"oc-light\">\n          <FormattedMessage\n            id=\"konnect.consent.consequence\"\n            defaultMessage=\"By clicking Allow, you allow this app to use your information.\">\n          </FormattedMessage>\n        </Typography>\n\n        <form action=\"\" onSubmit={this.action(undefined, scopes)}>\n          <DialogActions>\n            <div className={classes.wrapper}>\n              <Button\n                color=\"secondary\"\n                className={classes.button}\n                disabled={!!loading}\n                onClick={this.action(false, scopes)}\n              >\n                <FormattedMessage id=\"konnect.consent.cancelButton.label\" defaultMessage=\"Cancel\"></FormattedMessage>\n              </Button>\n              {(loading && loading !== REQUEST_CONSENT_ALLOW) &&\n                <CircularProgress size={24} className={classes.buttonProgress} />}\n            </div>\n            <div className={classes.wrapper}>\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                variant=\"contained\"\n                className=\"oc-button-primary\"\n                disabled={!!loading}\n                onClick={this.action(true, scopes)}\n              >\n                <FormattedMessage id=\"konnect.consent.allowButton.label\" defaultMessage=\"Allow\"></FormattedMessage>\n              </Button>\n              {loading === REQUEST_CONSENT_ALLOW && <CircularProgress size={24} className={classes.buttonProgress} />}\n            </div>\n          </DialogActions>\n\n          {renderIf(errors.http)(() => (\n            <Typography variant=\"subtitle2\" color=\"error\" className={classes.message}>\n              <ErrorMessage error={errors.http}></ErrorMessage>\n            </Typography>\n          ))}\n        </form>\n      </div>\n    );\n  }\n}\n\nConsent.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  loading: PropTypes.string.isRequired,\n  errors: PropTypes.object.isRequired,\n  hello: PropTypes.object,\n  client: PropTypes.object.isRequired,\n\n  dispatch: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n  const { hello } = state.common;\n  const { loading, errors } = state.login;\n\n  return {\n    loading: loading,\n    errors,\n    hello,\n    client: hello.details.client || {}\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Consent));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Route, Switch } from 'react-router-dom';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport ResponsiveScreen from '../../components/ResponsiveScreen';\nimport RedirectWithQuery from '../../components/RedirectWithQuery';\nimport { executeHello } from '../../actions/common';\n\nimport Login from './Login';\nimport Chooseaccount from './Chooseaccount';\nimport Consent from './Consent';\n\nconst styles = () => ({\n});\n\nclass Loginscreen extends React.PureComponent {\n  componentDidMount() {\n    this.props.dispatch(executeHello());\n  }\n\n  render() {\n    const { hello } = this.props;\n\n    const loading = hello === null;\n    return (\n      <ResponsiveScreen loading={loading} withoutPadding={true} >\n        <Switch>\n          <Route path=\"/identifier\" exact component={Login}></Route>\n          <Route path=\"/chooseaccount\" exact component={Chooseaccount}></Route>\n          <Route path=\"/consent\" exact component={Consent}></Route>\n          <RedirectWithQuery target=\"/identifier\"/>\n        </Switch>\n      </ResponsiveScreen>\n    );\n  }\n}\n\nLoginscreen.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  hello: PropTypes.object,\n\n  dispatch: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => {\n  const { hello } = state.common;\n\n  return {\n    hello\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Loginscreen));\n","export function newHelloRequest(flow, query) {\n  const r = {};\n\n  if (query.prompt) {\n    // TODO(longsleep): Validate prompt values?\n    r.prompt = query.prompt;\n  }\n\n  let selectedFlow = flow;\n  switch (flow) {\n    case 'oauth':\n    case 'consent':\n    case 'oidc':\n      r.scope = query.scope || '';\n      r.client_id = query.client_id || ''; // eslint-disable-line camelcase\n      r.redirect_uri = query.redirect_uri || '';  // eslint-disable-line camelcase\n      if (query.id_token_hint) {\n        r.id_token_hint = query.id_token_hint;  // eslint-disable-line camelcase\n      }\n      if (query.max_age) {\n        r.max_age = query.max_age;  // eslint-disable-line camelcase\n      }\n      if (query.claims_scope) {\n        // Add additional scopes from claims request if given.\n        r.scope += ' ' + query.claims_scope;\n      }\n      break;\n\n    default:\n      selectedFlow = null;\n  }\n\n  if (selectedFlow) {\n    r.flow = selectedFlow;\n  }\n\n  return r;\n}\n","export function withClientRequestState(obj) {\n  // Generate a 16 byte random token\n  const values = new Uint8Array(16);\n  crypto.getRandomValues(values);\n  // Convert the 16 byte to a hex string and assign to the state attribute\n  obj.state = Array.prototype.map.call(values, x => x.toString(16)).join('');\n\n  return obj;\n}\n\nexport function dirname(s) {\n  return s.replace(/\\\\/g,'/').replace(/\\/[^/]*$/, '');\n}\n\nexport function propertyFromStylesheet(selector, attribute, asURL=false) {\n  let value;\n  let sheetHref;\n\n  Array.prototype.some.call(document.styleSheets, function(sheet) {\n    try {\n      return Array.prototype.some.call(sheet.cssRules, function(rule) {\n        sheetHref = sheet.href;\n        if (selector === rule.selectorText) {\n          return Array.prototype.some.call(rule.style, function(style) {\n            if (attribute === style) {\n              value = rule.style.getPropertyValue(attribute);\n              return true;\n            }\n\n            return false;\n          });\n        }\n\n        return false;\n      });\n    } catch(e) {\n      // Ignore sheets which caused errors. This for example can happen if an\n      // extension injected styles from an other origin.\n      return false;\n    }\n  });\n\n  if (value && asURL) {\n    // This removes url() shit if there.\n    value = value.match(/(?:\\(['|\"]?)(.*?)(?:['|\"]?\\))/)[1];\n    if (!value) {\n      return null;\n    }\n    if (sheetHref) {\n      // URLs in CSS are relative to the CSS - so lets add stuff.\n      const baseHref = dirname(sheetHref);\n      value = baseHref + '/' + value;\n    }\n  }\n\n  return value;\n}\n\nexport function enhanceBodyBackground() {\n  const bg = propertyFromStylesheet('#bg-enhanced.enhanced', 'background-image', true);\n  const overlay = propertyFromStylesheet('#bg-enhanced.enhanced::after', 'background-image', true);\n\n  const promises = [];\n  if (bg) {\n    promises.push(new Promise(resolve => {\n      const img = new Image();\n      img.onload = () => {\n        resolve();\n      };\n      // Set image source to whatever the url from css holds.\n      img.src = bg;\n    }));\n  }\n  if (overlay) {\n    promises.push(new Promise(resolve => {\n      const img = new Image();\n      img.onload = () => {\n        resolve();\n      };\n      // Set image source to whatever the url from css holds.\n      img.src = overlay;\n    }));\n  }\n  Promise.all(promises).then(() => {\n    window.document.getElementById('bg-enhanced').className += ' enhanced';\n  });\n}\n","import {\n  ExtendedError,\n  ERROR_HTTP_NETWORK_ERROR,\n  ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS\n} from '../errors';\n\nexport function handleAxiosError(error) {\n  if (error.request) {\n    // Axios errors.\n    if (error.response) {\n      error = new ExtendedError(ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS, error.response);\n    } else {\n      error = new ExtendedError(ERROR_HTTP_NETWORK_ERROR);\n    }\n  }\n\n  return error;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport renderIf from 'render-if';\n\nimport { retryHello } from '../actions/common';\nimport { ErrorMessage } from '../errors';\n\nfunction Loading({ error, dispatch }) {\n  const retry = (event) => {\n    event.preventDefault();\n    dispatch(retryHello());\n  }\n\n  return (\n    <Grid item align=\"center\">\n      {renderIf(error === null)(() => (\n        <LinearProgress className=\"oc-progress\" />\n      ))}\n      {renderIf(error !== null)(() => (\n        <div>\n          <Typography className=\"oc-light\" variant=\"h5\" gutterBottom align=\"center\">\n            <FormattedMessage id=\"konnect.loading.error.headline\" defaultMessage=\"Failed to connect to server\" />\n          </Typography>\n          <Typography align=\"center\" color=\"error\">\n            <ErrorMessage error={error} />\n          </Typography>\n          <Button\n            autoFocus\n            color=\"primary\"\n            variant=\"contained\"\n            className=\"oc-button-primary oc-mt-l\"\n            onClick={(event) => retry(event)}\n          >\n            <FormattedMessage id=\"konnect.login.retryButton.label\" defaultMessage=\"Retry\" />\n          </Button>\n        </div>\n      ))}\n    </Grid>\n  );\n}\n\nLoading.propTypes = {\n  error: PropTypes.object,\n  dispatch: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => {\n  const { error } = state.common;\n\n  return {\n    error\n  };\n};\n\nexport default connect(mapStateToProps)(Loading);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport Loading from './Loading';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flex: 1\n  },\n  content: {\n    position: 'relative',\n    width: '100%'\n  },\n  actions: {\n    marginTop: -40,\n    justifyContent: 'flex-start',\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3)\n  },\n  wrapper: {\n    width: '100%',\n    maxWidth: 300,\n    display: 'flex',\n    flex: 1,\n    alignItems: 'center'\n  }\n});\n\nconst footerProductName = name => <strong>{name}</strong>;\n\nconst ResponsiveScreen = (props) => {\n  const {\n    classes,\n    withoutLogo,\n    withoutPadding,\n    loading,\n    children,\n    className,\n    DialogProps,\n    PaperProps,\n    ...other\n  } = props;\n\n  const logo = withoutLogo ? null :\n    <img src={process.env.PUBLIC_URL + '/static/logo.svg'} className=\"oc-logo\" alt=\"ownCloud Logo\"/>;\n\n  const content = loading ? <Loading/> : (withoutPadding ? children : <DialogContent>{children}</DialogContent>);\n\n  return (\n    <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\" spacing={0}\n      className={classNames(classes.root, className)} {...other}>\n      <div className={classes.wrapper}>\n        <div className={classes.content}>\n          {logo}\n          {content}\n        </div>\n      </div>\n      <footer className=\"oc-footer-message\">\n        <FormattedMessage\n          id=\"konnect.footer.slogan\"\n          defaultMessage=\"<name>ownCloud</name> - a safe home for all your data\"\n          values={{\n            name: chunks => footerProductName(chunks)\n          }}\n        />\n      </footer>\n    </Grid>\n  );\n};\n\nResponsiveScreen.defaultProps = {\n  withoutLogo: false,\n  withoutPadding: false,\n  loading: false\n};\n\nResponsiveScreen.propTypes = {\n  classes: PropTypes.object.isRequired,\n  withoutLogo: PropTypes.bool,\n  withoutPadding: PropTypes.bool,\n  loading: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  PaperProps: PropTypes.object,\n  DialogProps: PropTypes.object\n};\n\nexport default withStyles(styles)(ResponsiveScreen);\n"],"sourceRoot":""}