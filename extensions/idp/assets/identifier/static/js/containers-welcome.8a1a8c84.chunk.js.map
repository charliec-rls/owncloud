{"version":3,"sources":["errors/index.js","actions/common.js","containers/Welcome/Welcomescreen.js","models/hello.js","utils.js","actions/utils.js","components/Loading.js","components/ResponsiveScreen.js"],"names":["ERROR_LOGIN_VALIDATE_MISSINGUSERNAME","ERROR_LOGIN_VALIDATE_MISSINGPASSWORD","ERROR_LOGIN_FAILED","ERROR_HTTP_NETWORK_ERROR","ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS","ERROR_HTTP_UNEXPECTED_RESPONSE_STATE","translations","defineMessages","id","defaultMessage","ExtendedError","message","values","undefined","Error","captureStackTrace","ErrorMessage","injectIntl","props","error","intl","messageDescriptor","Object","assign","formatMessage","receiveError","type","types","resetHello","receiveHello","hello","success","username","displayName","state","executeHello","dispatch","getState","common","flow","query","r","withClientRequestState","newHelloRequest","axios","post","headers","then","response","status","data","Promise","resolve","catch","handleAxiosError","retryHello","executeLogoff","Welcomescreen","this","classes","loading","ResponsiveScreen","Typography","variant","component","className","subHeader","gutterBottom","DialogActions","Button","color","button","onClick","event","logoff","preventDefault","history","push","React","PureComponent","connect","withStyles","theme","margin","spacing","minWidth","marginBottom","prompt","selectedFlow","scope","client_id","redirect_uri","id_token_hint","max_age","claims_scope","obj","Uint8Array","crypto","getRandomValues","Array","prototype","map","call","x","toString","join","request","Grid","item","align","renderIf","LinearProgress","autoFocus","retry","withoutLogo","withoutPadding","children","other","DialogProps","PaperProps","logo","src","process","alt","content","DialogContent","container","justify","alignItems","direction","classNames","root","wrapper","name","chunks","footerProductName","defaultProps","display","flex","position","width","actions","marginTop","justifyContent","paddingLeft","paddingRight","maxWidth"],"mappings":"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","file":"static/js/containers-welcome.8a1a8c84.chunk.js","sourcesContent":["import { injectIntl, defineMessages } from 'react-intl';\n\nexport const ERROR_LOGIN_VALIDATE_MISSINGUSERNAME = 'konnect.error.login.validate.missingUsername';\nexport const ERROR_LOGIN_VALIDATE_MISSINGPASSWORD = 'konnect.error.login.validate.missingPassword';\nexport const ERROR_LOGIN_FAILED = 'konnect.error.login.failed';\nexport const ERROR_HTTP_NETWORK_ERROR = 'konnect.error.http.networkError';\nexport const ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS = 'konnect.error.http.unexpectedResponseStatus';\nexport const ERROR_HTTP_UNEXPECTED_RESPONSE_STATE = 'konnect.error.http.unexpectedResponseState';\n\n// Translatable error messages.\nconst translations = defineMessages({\n  [ERROR_LOGIN_VALIDATE_MISSINGUSERNAME]: {\n    id: ERROR_LOGIN_VALIDATE_MISSINGUSERNAME,\n    defaultMessage: 'Please enter a valid username'\n  },\n  [ERROR_LOGIN_VALIDATE_MISSINGPASSWORD]: {\n    id: ERROR_LOGIN_VALIDATE_MISSINGPASSWORD,\n    defaultMessage: 'Please enter a valid password'\n  },\n  [ERROR_LOGIN_FAILED]: {\n    id: ERROR_LOGIN_FAILED,\n    defaultMessage: 'Logon failed. Please verify your credentials and try again.'\n  },\n  [ERROR_HTTP_NETWORK_ERROR]: {\n    id: ERROR_HTTP_NETWORK_ERROR,\n    defaultMessage: 'Network error. Please check your connection and try again.'\n  },\n  [ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS]: {\n    id: ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS,\n    defaultMessage: 'Unexpected HTTP response: {status}. Please check your connection and try again.'\n  },\n  [ERROR_HTTP_UNEXPECTED_RESPONSE_STATE]: {\n    id: ERROR_HTTP_UNEXPECTED_RESPONSE_STATE,\n    defaultMessage: 'Unexpected response state: {state}'\n  }\n});\n\n// Error with values.\nexport class ExtendedError extends Error {\n  values = undefined;\n\n  constructor(message, values) {\n    super(message);\n    if (Error.captureStackTrace !== undefined) {\n      Error.captureStackTrace(this, ExtendedError);\n    }\n    this.values = values;\n  }\n}\n\n// Component to translate error text with values.\nfunction ErrorMessageComponent(props) {\n  const { error, intl } = props;\n\n  if (!error) {\n    return null;\n  }\n\n  const id = error.id ? error.id : error.message;\n  const messageDescriptor = Object.assign({}, {\n    id,\n    defaultMessage: error.id ? error.message : undefined\n  }, translations[id]);\n\n  return intl.formatMessage(messageDescriptor, error.values);\n}\n\nexport const ErrorMessage = injectIntl(ErrorMessageComponent);\n","import axios from 'axios';\n\nimport { newHelloRequest } from '../models/hello';\nimport { withClientRequestState } from '../utils';\nimport {\n  ExtendedError,\n  ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS,\n  ERROR_HTTP_UNEXPECTED_RESPONSE_STATE\n} from '../errors';\n\nimport { handleAxiosError } from './utils';\nimport * as types from './types';\n\nexport function receiveError(error) {\n  return {\n    type: types.RECEIVE_ERROR,\n    error\n  };\n}\n\nexport function resetHello() {\n  return {\n    type: types.RESET_HELLO\n  };\n}\n\nexport function receiveHello(hello) {\n  const { success, username, displayName } = hello;\n\n  return {\n    type: types.RECEIVE_HELLO,\n    state: success === true,\n    username,\n    displayName,\n    hello\n  };\n}\n\nexport function executeHello() {\n  return function(dispatch, getState) {\n    dispatch(resetHello());\n\n    const { flow, query } = getState().common;\n\n    const r = withClientRequestState(newHelloRequest(flow, query));\n    return axios.post('./identifier/_/hello', r, {\n      headers: {\n        'Kopano-Konnect-XSRF': '1'\n      }\n    }).then(response => {\n      switch (response.status) {\n        case 200:\n          // success.\n          return response.data;\n        case 204:\n          // not signed-in.\n          return {\n            success: false,\n            state: response.headers['kopano-konnect-state']\n          };\n        default:\n          // error.\n          throw new ExtendedError(ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS, response);\n      }\n    }).then(response => {\n      if (response.state !== r.state) {\n        throw new ExtendedError(ERROR_HTTP_UNEXPECTED_RESPONSE_STATE, response);\n      }\n\n      dispatch(receiveHello(response));\n      return Promise.resolve(response);\n    }).catch(error => {\n      error = handleAxiosError(error);\n\n      dispatch(receiveError(error));\n    });\n  };\n}\n\nexport function retryHello() {\n  return function(dispatch) {\n    dispatch(receiveError(null));\n\n    return dispatch(executeHello());\n  };\n}\n\nexport function requestLogoff() {\n  return {\n    type: types.REQUEST_LOGOFF\n  };\n}\n\nexport function receiveLogoff(state) {\n  return {\n    type: types.RECEIVE_LOGOFF,\n    state\n  };\n}\n\nexport function executeLogoff() {\n  return function(dispatch) {\n    dispatch(resetHello());\n    dispatch(requestLogoff());\n\n    const r = withClientRequestState({});\n    return axios.post('./identifier/_/logoff', r, {\n      headers: {\n        'Kopano-Konnect-XSRF': '1'\n      }\n    }).then(response => {\n      switch (response.status) {\n        case 200:\n          // success.\n          return response.data;\n        default:\n          // error.\n          throw new ExtendedError(ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS, response);\n      }\n    }).then(response => {\n      if (response.state !== r.state) {\n        throw new ExtendedError(ERROR_HTTP_UNEXPECTED_RESPONSE_STATE, response);\n      }\n\n      dispatch(receiveLogoff(response.success === true));\n      return Promise.resolve(response);\n    }).catch(error => {\n      error = handleAxiosError(error);\n\n      dispatch(receiveError(error));\n    });\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nimport ResponsiveScreen from '../../components/ResponsiveScreen';\nimport { executeLogoff } from '../../actions/common';\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing(1),\n    minWidth: 100\n  },\n  subHeader: {\n    marginBottom: theme.spacing(5)\n  }\n});\n\nclass Welcomescreen extends React.PureComponent {\n  render() {\n    const { classes, hello } = this.props;\n\n    const loading = hello === null;\n    return (\n      <ResponsiveScreen loading={loading}>\n        <Typography variant=\"h5\" component=\"h3\" className=\"oc-light\">\n          <FormattedMessage\n            id=\"konnect.welcome.headline\"\n            defaultMessage=\"Welcome {displayName}\"\n            values={{displayName: hello.displayName}}>\n          </FormattedMessage>\n        </Typography>\n        <Typography variant=\"subtitle1\" className={classes.subHeader + \" oc-light\"}>\n          {hello.username}\n        </Typography>\n\n        <Typography gutterBottom className=\"oc-light\">\n          <FormattedMessage id=\"konnect.welcome.message\"\n            defaultMessage=\"You are signed in - awesome!\"></FormattedMessage>\n        </Typography>\n\n        <DialogActions>\n          <Button\n            color=\"secondary\"\n            className={classes.button}\n            variant=\"contained\"\n            onClick={(event) => this.logoff(event)}\n          >\n            <FormattedMessage id=\"konnect.welcome.signoutButton.label\" defaultMessage=\"Sign out\"></FormattedMessage>\n          </Button>\n        </DialogActions>\n      </ResponsiveScreen>\n    );\n  }\n\n  logoff(event) {\n    event.preventDefault();\n\n    this.props.dispatch(executeLogoff()).then((response) => {\n      const { history } = this.props;\n\n      if (response.success) {\n        history.push('/identifier');\n      }\n    });\n  }\n}\n\nWelcomescreen.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  hello: PropTypes.object,\n\n  dispatch: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => {\n  const { hello } = state.common;\n\n  return {\n    hello\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(Welcomescreen));\n","export function newHelloRequest(flow, query) {\n  const r = {};\n\n  if (query.prompt) {\n    // TODO(longsleep): Validate prompt values?\n    r.prompt = query.prompt;\n  }\n\n  let selectedFlow = flow;\n  switch (flow) {\n    case 'oauth':\n    case 'consent':\n    case 'oidc':\n      r.scope = query.scope || '';\n      r.client_id = query.client_id || ''; // eslint-disable-line camelcase\n      r.redirect_uri = query.redirect_uri || '';  // eslint-disable-line camelcase\n      if (query.id_token_hint) {\n        r.id_token_hint = query.id_token_hint;  // eslint-disable-line camelcase\n      }\n      if (query.max_age) {\n        r.max_age = query.max_age;  // eslint-disable-line camelcase\n      }\n      if (query.claims_scope) {\n        // Add additional scopes from claims request if given.\n        r.scope += ' ' + query.claims_scope;\n      }\n      break;\n\n    default:\n      selectedFlow = null;\n  }\n\n  if (selectedFlow) {\n    r.flow = selectedFlow;\n  }\n\n  return r;\n}\n","export function withClientRequestState(obj) {\n  // Generate a 16 byte random token\n  const values = new Uint8Array(16);\n  crypto.getRandomValues(values);\n  // Convert the 16 byte to a hex string and assign to the state attribute\n  obj.state = Array.prototype.map.call(values, x => x.toString(16)).join('');\n\n  return obj;\n}\n\nexport function dirname(s) {\n  return s.replace(/\\\\/g,'/').replace(/\\/[^/]*$/, '');\n}\n\nexport function propertyFromStylesheet(selector, attribute, asURL=false) {\n  let value;\n  let sheetHref;\n\n  Array.prototype.some.call(document.styleSheets, function(sheet) {\n    try {\n      return Array.prototype.some.call(sheet.cssRules, function(rule) {\n        sheetHref = sheet.href;\n        if (selector === rule.selectorText) {\n          return Array.prototype.some.call(rule.style, function(style) {\n            if (attribute === style) {\n              value = rule.style.getPropertyValue(attribute);\n              return true;\n            }\n\n            return false;\n          });\n        }\n\n        return false;\n      });\n    } catch(e) {\n      // Ignore sheets which caused errors. This for example can happen if an\n      // extension injected styles from an other origin.\n      return false;\n    }\n  });\n\n  if (value && asURL) {\n    // This removes url() shit if there.\n    value = value.match(/(?:\\(['|\"]?)(.*?)(?:['|\"]?\\))/)[1];\n    if (!value) {\n      return null;\n    }\n    if (sheetHref) {\n      // URLs in CSS are relative to the CSS - so lets add stuff.\n      const baseHref = dirname(sheetHref);\n      value = baseHref + '/' + value;\n    }\n  }\n\n  return value;\n}\n\nexport function enhanceBodyBackground() {\n  const bg = propertyFromStylesheet('#bg-enhanced.enhanced', 'background-image', true);\n  const overlay = propertyFromStylesheet('#bg-enhanced.enhanced::after', 'background-image', true);\n\n  const promises = [];\n  if (bg) {\n    promises.push(new Promise(resolve => {\n      const img = new Image();\n      img.onload = () => {\n        resolve();\n      };\n      // Set image source to whatever the url from css holds.\n      img.src = bg;\n    }));\n  }\n  if (overlay) {\n    promises.push(new Promise(resolve => {\n      const img = new Image();\n      img.onload = () => {\n        resolve();\n      };\n      // Set image source to whatever the url from css holds.\n      img.src = overlay;\n    }));\n  }\n  Promise.all(promises).then(() => {\n    window.document.getElementById('bg-enhanced').className += ' enhanced';\n  });\n}\n","import {\n  ExtendedError,\n  ERROR_HTTP_NETWORK_ERROR,\n  ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS\n} from '../errors';\n\nexport function handleAxiosError(error) {\n  if (error.request) {\n    // Axios errors.\n    if (error.response) {\n      error = new ExtendedError(ERROR_HTTP_UNEXPECTED_RESPONSE_STATUS, error.response);\n    } else {\n      error = new ExtendedError(ERROR_HTTP_NETWORK_ERROR);\n    }\n  }\n\n  return error;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport renderIf from 'render-if';\n\nimport { retryHello } from '../actions/common';\nimport { ErrorMessage } from '../errors';\n\nfunction Loading({ error, dispatch }) {\n  const retry = (event) => {\n    event.preventDefault();\n    dispatch(retryHello());\n  }\n\n  return (\n    <Grid item align=\"center\">\n      {renderIf(error === null)(() => (\n        <LinearProgress className=\"oc-progress\" />\n      ))}\n      {renderIf(error !== null)(() => (\n        <div>\n          <Typography className=\"oc-light\" variant=\"h5\" gutterBottom align=\"center\">\n            <FormattedMessage id=\"konnect.loading.error.headline\" defaultMessage=\"Failed to connect to server\" />\n          </Typography>\n          <Typography align=\"center\" color=\"error\">\n            <ErrorMessage error={error} />\n          </Typography>\n          <Button\n            autoFocus\n            color=\"primary\"\n            variant=\"contained\"\n            className=\"oc-button-primary oc-mt-l\"\n            onClick={(event) => retry(event)}\n          >\n            <FormattedMessage id=\"konnect.login.retryButton.label\" defaultMessage=\"Retry\" />\n          </Button>\n        </div>\n      ))}\n    </Grid>\n  );\n}\n\nLoading.propTypes = {\n  error: PropTypes.object,\n  dispatch: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => {\n  const { error } = state.common;\n\n  return {\n    error\n  };\n};\n\nexport default connect(mapStateToProps)(Loading);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport Loading from './Loading';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flex: 1\n  },\n  content: {\n    position: 'relative',\n    width: '100%'\n  },\n  actions: {\n    marginTop: -40,\n    justifyContent: 'flex-start',\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3)\n  },\n  wrapper: {\n    width: '100%',\n    maxWidth: 300,\n    display: 'flex',\n    flex: 1,\n    alignItems: 'center'\n  }\n});\n\nconst footerProductName = name => <strong>{name}</strong>;\n\nconst ResponsiveScreen = (props) => {\n  const {\n    classes,\n    withoutLogo,\n    withoutPadding,\n    loading,\n    children,\n    className,\n    DialogProps,\n    PaperProps,\n    ...other\n  } = props;\n\n  const logo = withoutLogo ? null :\n    <img src={process.env.PUBLIC_URL + '/static/logo.svg'} className=\"oc-logo\" alt=\"ownCloud Logo\"/>;\n\n  const content = loading ? <Loading/> : (withoutPadding ? children : <DialogContent>{children}</DialogContent>);\n\n  return (\n    <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\" spacing={0}\n      className={classNames(classes.root, className)} {...other}>\n      <div className={classes.wrapper}>\n        <div className={classes.content}>\n          {logo}\n          {content}\n        </div>\n      </div>\n      <footer className=\"oc-footer-message\">\n        <FormattedMessage\n          id=\"konnect.footer.slogan\"\n          defaultMessage=\"<name>ownCloud</name> - a safe home for all your data\"\n          values={{\n            name: chunks => footerProductName(chunks)\n          }}\n        />\n      </footer>\n    </Grid>\n  );\n};\n\nResponsiveScreen.defaultProps = {\n  withoutLogo: false,\n  withoutPadding: false,\n  loading: false\n};\n\nResponsiveScreen.propTypes = {\n  classes: PropTypes.object.isRequired,\n  withoutLogo: PropTypes.bool,\n  withoutPadding: PropTypes.bool,\n  loading: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  PaperProps: PropTypes.object,\n  DialogProps: PropTypes.object\n};\n\nexport default withStyles(styles)(ResponsiveScreen);\n"],"sourceRoot":""}