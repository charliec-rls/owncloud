{"version":3,"sources":["components/PrivateRoute.js","Routes.js","Main.js","components/RedirectWithQuery.js"],"names":["PrivateRoute","Target","component","hello","rest","render","props","RedirectWithQuery","target","AsyncLogin","AsyncComponent","AsyncWelcome","AsyncGoodbye","Routes","path","exact","App","this","classes","pathPrefix","basename","event","preventDefault","window","location","reload","PureComponent","connect","state","common","updateAvailable","withRouter","to","pathname","search","hash"],"mappings":"8OAqBeA,EAfM,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAAmBC,EAAtB,EAAsBA,MAAUC,EAAhC,wBACnB,kBAAC,IAAD,iBAAWA,EAAX,CAAiBC,OAAQ,SAAAC,GAAK,OAC5BH,EACE,kBAACF,EAAWK,GAEZ,kBAACC,EAAA,EAAD,CAAmBC,OAAO,qBCH1BC,EAAaC,aAAe,kBAChC,+DACIC,EAAeD,aAAe,kBAClC,uDACIE,EAAeF,aAAe,kBAClC,uDA0BaG,EAxBA,SAAC,GAAD,IAAGV,EAAH,EAAGA,MAAH,OACb,kBAAC,IAAD,KACE,kBAAC,EAAD,CACEW,KAAK,WACLC,OAAK,EACLb,UAAWS,EACXR,MAAOA,IAET,kBAAC,IAAD,CACEW,KAAK,WACLC,OAAK,EACLb,UAAWU,IAEb,kBAAC,IAAD,CACEE,KAAK,IACLZ,UAAWO,MCtBXO,E,4JACJ,WACE,MAAuCC,KAAKX,MAA3BH,GAAjB,EAAQe,QAAR,EAAiBf,OAAOgB,EAAxB,EAAwBA,WAExB,OACE,kBAAC,IAAD,CAAeC,SAAUD,GACvB,kBAAC,EAAD,CAAQhB,MAAOA,O,oBAKrB,SAAOkB,GACLA,EAAMC,iBAENC,OAAOC,SAASC,a,GAdFC,iBAoCHC,uBAVS,SAACC,GACvB,MAA+CA,EAAMC,OAErD,MAAO,CACL1B,MAHF,EAAQA,MAIN2B,gBAJF,EAAeA,gBAKbX,WALF,EAAgCA,cASnBQ,CAAyBX,I,4FCtBzBe,iBAjBW,SAAC,GAAiC,IAAhCvB,EAA+B,EAA/BA,OAAQgB,EAAuB,EAAvBA,SAAapB,EAAU,iBACnD4B,EAAK,CACTC,SAAUzB,EACV0B,OAAQV,EAASU,OACjBC,KAAMX,EAASW,MAGjB,OACE,kBAAC,IAAD,eAAUH,GAAIA,GAAQ5B","file":"static/js/identifier-main.00682d85.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\n\nimport RedirectWithQuery from './RedirectWithQuery';\n\nconst PrivateRoute = ({ component: Target, hello, ...rest }) => (\n  <Route {...rest} render={props => (\n    hello ? (\n      <Target {...props}/>\n    ) : (\n      <RedirectWithQuery target='/identifier' />\n    )\n  )}/>\n);\n\nPrivateRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n  hello: PropTypes.object\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Switch } from 'react-router-dom';\nimport AsyncComponent from 'kpop/es/AsyncComponent';\n\nimport PrivateRoute from './components/PrivateRoute';\n\nconst AsyncLogin = AsyncComponent(() =>\n  import(/* webpackChunkName: \"containers-login\" */ './containers/Login'));\nconst AsyncWelcome = AsyncComponent(() =>\n  import(/* webpackChunkName: \"containers-welcome\" */ './containers/Welcome'));\nconst AsyncGoodbye = AsyncComponent(() =>\n  import(/* webpackChunkName: \"containers-goodbye\" */ './containers/Goodbye'));\n\nconst Routes = ({ hello }) => (\n  <Switch>\n    <PrivateRoute\n      path=\"/welcome\"\n      exact\n      component={AsyncWelcome}\n      hello={hello}\n    />\n    <Route\n      path=\"/goodbye\"\n      exact\n      component={AsyncGoodbye}\n    />\n    <Route\n      path=\"/\"\n      component={AsyncLogin}\n    />\n  </Switch>\n);\n\nRoutes.propTypes = {\n  hello: PropTypes.object\n};\n\nexport default Routes;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Routes from './Routes';\n\nclass App extends PureComponent {\n  render() {\n    const { classes, hello, pathPrefix } = this.props;\n\n    return (\n      <BrowserRouter basename={pathPrefix}>\n        <Routes hello={hello}/>\n      </BrowserRouter>\n    );\n  }\n\n  reload(event) {\n    event.preventDefault();\n\n    window.location.reload();\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n\n  hello: PropTypes.object,\n  updateAvailable: PropTypes.bool.isRequired,\n  pathPrefix: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = (state) => {\n  const { hello, updateAvailable, pathPrefix } = state.common;\n\n  return {\n    hello,\n    updateAvailable,\n    pathPrefix\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport { Redirect } from 'react-router-dom';\n\nconst RedirectWithQuery = ({target, location, ...rest}) => {\n  const to = {\n    pathname: target,\n    search: location.search,\n    hash: location.hash\n  };\n\n  return (\n    <Redirect to={to} {...rest}></Redirect>\n  );\n};\n\nRedirectWithQuery.propTypes = {\n  target: PropTypes.string.isRequired,\n  location: PropTypes.object.isRequired\n};\n\nexport default withRouter(RedirectWithQuery);\n"],"sourceRoot":""}